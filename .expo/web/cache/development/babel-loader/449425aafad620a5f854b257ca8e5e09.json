{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { ProgressBarAndroid } from \"react-native-web/dist/index\";\nimport { Progress } from 'native-base';\nimport FormContainer from \"../../Shared/Form/FormContainer\";\nimport Input from \"../../Shared/Form/Input\";\nimport Error from \"../../Shared/Error\";\nimport Toast from \"react-native-toast-message\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\";\nimport PhoneInput from 'react-native-phone-number-input';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from \"axios\";\nimport baseURL from \"../../assets/common/baseUrl\";\nimport { Item, Picker } from 'native-base';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\n\nvar countries = require(\"../../assets/countries.json\");\n\nvar city = require(\"../../assets/city.json\");\n\nimport { isValidEmail, isValidObjField, updateError } from \"../../assets/methods\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar validationSchema = Yup.object({\n  name: Yup.string().trim().min(3, 'Invalid name!').required('Name is required!'),\n  email: Yup.string().email('Invalid email!').required('Email is required!'),\n  password: Yup.string().trim().min(8, 'Password is too short!').required('Password is required!'),\n  confirmPassword: Yup.string().equals([Yup.ref('password'), null], 'Password does not match!')\n});\n\nvar Register = function Register(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      phoneNumber = _useState2[0],\n      setphoneNumber = _useState2[1];\n\n  var phoneInput = useRef(null);\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      phone = _useState8[0],\n      setPhone = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      password = _useState10[0],\n      setPassword = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      ConfirmPassword = _useState12[0],\n      setConfirmPassword = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      jobUser = _useState14[0],\n      setJobUser = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      adress = _useState16[0],\n      setAdress = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      error = _useState18[0],\n      setError = _useState18[1];\n\n  var register = function register() {\n    if (email === \"\" || name === \"\" || phone === \"\" || password === \"\" || jobUser === \"\" || adress === \"\") {\n      setError(\"Please fill in the form correctly\");\n    }\n\n    var user = {\n      name: name,\n      email: email,\n      password: password,\n      ConfirmPassword: ConfirmPassword,\n      phone: phone,\n      jobUser: jobUser,\n      adress: adress,\n      isAdmin: false\n    };\n    axios.post(baseURL + \"users/register\", user).then(function (res) {\n      if (res.status == 200) {\n        Toast.show({\n          topOffset: 60,\n          type: \"success\",\n          text1: \"Registration Succeeded\",\n          text2: \"Please Login into your account\"\n        });\n        setTimeout(function () {\n          props.navigation.navigate(\"serviceForm\");\n        }, 500);\n      }\n    }).catch(function (error) {\n      Toast.show({\n        topOffset: 60,\n        type: \"error\",\n        text1: \"Something went wrong\",\n        text2: \"Please try again\"\n      });\n    });\n  };\n\n  return _jsx(KeyboardAwareScrollView, {\n    viewIsInsideTabBar: true,\n    extraHeight: 200,\n    enableOnAndroid: true,\n    children: _jsxs(FormContainer, {\n      title: \"Register\",\n      children: [_jsxs(View, {\n        style: styles.example,\n        children: [_jsx(Text, {\n          children: \"  1/2\"\n        }), _jsx(ProgressBarAndroid, {\n          size: \"sm\",\n          mb: 4,\n          styleAttr: \"Horizontal\",\n          indeterminate: false,\n          progress: 0.5\n        })]\n      }), _jsx(View, {\n        style: styles.pic,\n        children: _jsx(Item, {\n          picker: true,\n          style: {\n            borderColor: 'transparent',\n            justifyContent: \"center\",\n            alignSelf: \"center\",\n            width: \"80%\",\n            marginTop: 6\n          },\n          children: _jsx(Picker, {\n            mode: \"dropdown\",\n            iosIcon: _jsx(Icon, {\n              name: \"arrow-down\",\n              color: \"#007aff\"\n            }),\n            style: {\n              width: undefined\n            },\n            selectedValue: jobUser,\n            placeholder: \"Select your job\",\n            placeholderStyle: {\n              color: '#007aff'\n            },\n            placeholderIconColor: \"#007aff\",\n            onValueChange: function onValueChange(e) {\n              return setJobUser(e);\n            },\n            children: countries.map(function (c) {\n              return _jsx(Picker.Item, {\n                label: c.name,\n                value: c.name\n              }, c.code);\n            })\n          })\n        })\n      }), _jsx(Input, {\n        placeholder: \"Email\",\n        name: \"email\",\n        id: \"email\",\n        onChangeText: function onChangeText(text) {\n          return setEmail(text.toLowerCase());\n        }\n      }), _jsx(Input, {\n        placeholder: \"Name\",\n        name: \"name\",\n        id: \"name\",\n        onChangeText: function onChangeText(text) {\n          return setName(text);\n        }\n      }), _jsx(PhoneInput, {\n        placeholder: \"Phone Number\",\n        name: \"phone\",\n        id: \"phone\",\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(text) {\n          return setPhone(text);\n        },\n        ref: phoneInput,\n        defaultValue: phoneNumber,\n        defaultCode: \"IN\",\n        layout: \"first\",\n        withShadow: true,\n        autoFocus: true,\n        containerStyle: styles.phoneContainer,\n        textContainerStyle: styles.textInput,\n        onChangeFormattedText: function onChangeFormattedText(text) {\n          setphoneNumber(text);\n        }\n      }), _jsx(View, {\n        style: styles.pic,\n        children: _jsx(Item, {\n          picker: true,\n          children: _jsx(Picker, {\n            mode: \"dropdown\",\n            iosIcon: _jsx(Icon, {\n              name: \"arrow-down\",\n              color: \"#007aff\"\n            }),\n            style: {\n              height: 50,\n              width: 150\n            },\n            selectedValue: adress,\n            placeholder: \"Select your country\",\n            placeholderStyle: {\n              color: \"#007aff\"\n            },\n            placeholderIconColor: \"#007aff\",\n            onValueChange: function onValueChange(e) {\n              return setAdress(e);\n            },\n            children: city.map(function (c) {\n              return _jsx(Picker.Item, {\n                label: c.name,\n                value: c.name\n              }, c.code);\n            })\n          })\n        })\n      }), _jsx(Input, {\n        placeholder: \"Password\",\n        name: \"password\",\n        id: \"password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"ConfirmPassword\",\n        name: \"ConfirmPassword\",\n        id: \"ConfirmPassword\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          return setConfirmPassword(text);\n        }\n      }), _jsx(View, {\n        style: styles.buttonGroup,\n        children: error ? _jsx(Error, {\n          message: error\n        }) : null\n      }), _jsxs(View, {\n        style: styles.options,\n        children: [_jsx(EasyButton, {\n          large: true,\n          secondary: true,\n          onPress: function onPress() {\n            return props.navigation.navigate(\"Login\");\n          },\n          children: _jsx(Text, {\n            style: {\n              color: \"white\"\n            },\n            children: \"Back to Login\"\n          })\n        }), _jsx(EasyButton, {\n          large: true,\n          secondary: true,\n          onPress: function onPress() {\n            return props.navigation.navigate(\"serviceForm\");\n          },\n          children: _jsx(Text, {\n            style: {\n              color: \"white\"\n            },\n            children: \"Vos services\"\n          })\n        }), _jsx(EasyButton, {\n          large: true,\n          primary: true,\n          onPress: function onPress() {\n            return register();\n          },\n          children: _jsx(Text, {\n            style: {\n              color: \"white\"\n            },\n            children: \"Register\"\n          })\n        })]\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  buttonGroup: {\n    width: \"80%\",\n    margin: 10,\n    alignItems: \"center\"\n  },\n  options: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  inputgauche: {\n    marginRight: 8\n  },\n  pic: {\n    width: '80%',\n    height: 50,\n    borderRadius: 20,\n    backgroundColor: 'white',\n    margin: 10,\n    borderRadius: 20,\n    padding: 10,\n    borderWidth: 2,\n    borderColor: 'orange',\n    justifyContent: 'center'\n  },\n  example: {\n    marginVertical: 24,\n    padding: 10,\n    margin: 10,\n    fontSize: 50\n  },\n  pro: {\n    margin: 10,\n    width: '80%',\n    height: 50\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  phoneContainer: {\n    width: '80%',\n    height: 50,\n    borderRadius: 20,\n    backgroundColor: 'white',\n    margin: 10,\n    borderRadius: 20,\n    padding: 10,\n    borderWidth: 2,\n    borderColor: 'orange',\n    justifyContent: 'center'\n  },\n  button: {\n    marginTop: 30,\n    width: '75%',\n    padding: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'green'\n  },\n  textInput: {\n    paddingVertical: 0\n  }\n});\nexport default Register;","map":{"version":3,"sources":["/home/theo/Bureau/react/QAM_U/client_Qam/Screens/User/Register.js"],"names":["React","useState","useRef","ProgressBarAndroid","Progress","FormContainer","Input","Error","Toast","KeyboardAwareScrollView","EasyButton","PhoneInput","Formik","Yup","axios","baseURL","Item","Picker","Icon","countries","require","city","isValidEmail","isValidObjField","updateError","validationSchema","object","name","string","trim","min","required","email","password","confirmPassword","equals","ref","Register","props","phoneNumber","setphoneNumber","phoneInput","setEmail","setName","phone","setPhone","setPassword","ConfirmPassword","setConfirmPassword","jobUser","setJobUser","adress","setAdress","error","setError","register","user","isAdmin","post","then","res","status","show","topOffset","type","text1","text2","setTimeout","navigation","navigate","catch","styles","example","pic","borderColor","justifyContent","alignSelf","width","marginTop","undefined","color","e","map","c","code","text","toLowerCase","phoneContainer","textInput","height","buttonGroup","options","StyleSheet","create","margin","alignItems","flexDirection","inputgauche","marginRight","borderRadius","backgroundColor","padding","borderWidth","marginVertical","fontSize","pro","container","flex","button","paddingVertical"],"mappings":"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","sourcesContent":["import React, { useState,useRef  } from \"react\";\nimport { View, Text, StyleSheet, Button,ProgressBarAndroid } from \"react-native\";\nimport { Progress } from 'native-base';\nimport FormContainer from \"../../Shared/Form/FormContainer\";\nimport Input from \"../../Shared/Form/Input\";\nimport Error from \"../../Shared/Error\";\nimport Toast from \"react-native-toast-message\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\";\nimport PhoneInput from 'react-native-phone-number-input';\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from \"axios\";\nimport baseURL from \"../../assets/common/baseUrl\";\n\nimport { Item, Picker} from 'native-base'\nimport Icon from 'react-native-vector-icons/FontAwesome'\n\nconst countries = require(\"../../assets/countries.json\");\n\nconst city = require(\"../../assets/city.json\");\n\n\nimport { isValidEmail, isValidObjField, updateError } from '../../assets/methods';\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .trim()\n    .min(3, 'Invalid name!')\n    .required('Name is required!'),\n  email: Yup.string().email('Invalid email!').required('Email is required!'),\n  password: Yup.string()\n    .trim()\n    .min(8, 'Password is too short!')\n    .required('Password is required!'),\n  confirmPassword: Yup.string().equals(\n    [Yup.ref('password'), null],\n    'Password does not match!'\n  ),\n});\n\n\nconst Register = (props) => {\n  const [phoneNumber, setphoneNumber] = useState('');\n  const phoneInput = useRef(null);\n\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [ConfirmPassword, setConfirmPassword] = useState(\"\");\n\n  const [jobUser, setJobUser] = useState(\"\");\n  const [adress, setAdress] = useState(\"\");\n\n  const [error, setError] = useState(\"\");\n  // const [city, setCity] = useState(\"\");\n\n\n\n//   const searchCity = (text) => {\n//     if (text == \"\") {\n//         setProductFilter(city)\n//     }\n//     setProductFilter(\n//         productList.filter((i) => \n//             i.name.toLowerCase().includes(text.toLowerCase())\n//         )\n//     )\n// }\n\n  const register = () => {\n    if (email === \"\" || name === \"\" || phone === \"\" || password === \"\"  || jobUser === \"\" || adress === \"\") {\n      setError(\"Please fill in the form correctly\");\n    }\n\n    let user = {\n      name: name,\n      email: email,\n      password: password,\n      ConfirmPassword :ConfirmPassword,\n      phone: phone,\n      jobUser:  jobUser,\n      adress: adress,\n      isAdmin: false,\n\n    };\n    axios\n      .post(`${baseURL}users/register`, user)\n      .then((res) => {\n        if (res.status == 200) {\n          Toast.show({\n            topOffset: 60,\n            type: \"success\",\n            text1: \"Registration Succeeded\",\n            text2: \"Please Login into your account\",\n          });\n          setTimeout(() => {\n            props.navigation.navigate(\"serviceForm\");\n          }, 500);\n        }\n      })\n      .catch((error) => {\n        Toast.show({\n          topOffset: 60,\n          type: \"error\",\n          text1: \"Something went wrong\",\n          text2: \"Please try again\",\n        });\n      });\n  };\n  \n\n  return (\n    <KeyboardAwareScrollView\n      viewIsInsideTabBar={true}\n      extraHeight={200}\n      enableOnAndroid={true}\n    >\n      <FormContainer title={\"Register\"}>\n\n      <View style={styles.example}>\n        <Text>  1/2</Text>\n        <ProgressBarAndroid   size=\"sm\"  mb={4}\n          styleAttr=\"Horizontal\"\n          indeterminate={false}\n          progress={0.5}\n        />\n\n        \n      </View>\n      <View style={styles.pic}>\n      <Item picker  style={{\n            borderColor: 'transparent', \n            justifyContent:\"center\", \n            alignSelf:\"center\",\n            width: \"80%\",\n            marginTop: 6\n            }}>\n                    <Picker\n                        mode=\"dropdown\"\n                        iosIcon={<Icon name=\"arrow-down\" color={\"#007aff\"} />}\n                        style={{ width: undefined }}\n                        selectedValue={jobUser}\n                        placeholder=\"Select your job\"\n                        placeholderStyle={{ color: '#007aff' }}\n                        placeholderIconColor=\"#007aff\"\n                        onValueChange={(e) => setJobUser(e)}\n                    >\n                        {countries.map((c) => {\n                            return <Picker.Item \n                                    key={c.code} \n                                    label={c.name}\n                                    value={c.name}\n                                    />\n                        })}\n                    </Picker>\n                </Item>\n                </View>\n        <Input\n          placeholder={\"Email\"}\n          name={\"email\"}\n          id={\"email\"}\n          onChangeText={(text) => setEmail(text.toLowerCase())}\n        />\n        <Input\n          placeholder={\"Name\"}\n          name={\"name\"}\n          id={\"name\"}\n          onChangeText={(text) => setName(text)}\n        />\n{/* \n        <Input\n          placeholder={\"district,city,country\"}\n          name={\"adress\"}\n          id={\"adress\"}\n          onChangeText={(text) => setAdress(text)}\n        /> */}\n\n\n\n\n{/* \n<PhoneInput\n        placeholder={\"Phone Number\"}\n        name={\"phone\"}\n        id={\"phone\"}\n        keyboardType={\"numeric\"}\n        onChangeText={(text) => setPhone(text)}\n        ref={phoneInput}\n        defaultValue={phoneNumber}\n        defaultCode=\"IN\"\n        layout=\"first\"\n        withShadow\n        autoFocus\n        containerStyle={styles.phoneContainer}\n        textContainerStyle={styles.textInput}\n        onChangeFormattedText={text => {\n          setphoneNumber(text);\n        }}\n      /> */}\n      \n      <PhoneInput\n             placeholder={\"Phone Number\"}\n             name={\"phone\"}\n             id={\"phone\"}\n             keyboardType={\"numeric\"}\n             onChangeText={(text) => setPhone(text)}\n        ref={phoneInput}\n         defaultValue={phoneNumber}\n        defaultCode=\"IN\"\n        layout=\"first\"\n        withShadow\n        autoFocus\n        containerStyle={styles.phoneContainer}\n        textContainerStyle={styles.textInput}\n        onChangeFormattedText={text => {\n          setphoneNumber(text);\n        }}\n      />\n\n<View style={styles.pic}>\n \n\n\n\n <Item picker>\n       <Picker\n         mode=\"dropdown\"\n         iosIcon={<Icon name=\"arrow-down\" color={\"#007aff\"} />}\n         style={{  height: 50, width: 150 }}\n         selectedValue={adress}\n         placeholder=\"Select your country\"\n         placeholderStyle={{ color: \"#007aff\" }}\n         placeholderIconColor=\"#007aff\"\n         onValueChange={(e) => setAdress(e)}\n       >\n         {city.map((c) => {\n     return <Picker.Item key={c.code} label={c.name} value={c.name} />;\n   })}\n       </Picker>\n     </Item>\n </View>\n        <Input\n          placeholder={\"Password\"}\n          name={\"password\"}\n          id={\"password\"}\n          secureTextEntry={true}\n          onChangeText={(text) => setPassword(text)}\n        />\n      \n\n\n       \n      <Input\n          placeholder={\"ConfirmPassword\"}\n          name={\"ConfirmPassword\"}\n          id={\"ConfirmPassword\"}\n          secureTextEntry={true}\n          onChangeText={(text) => setConfirmPassword(text)}\n        />\n    \n\n\n\n{/* \n              <View style={{\n            borderColor: 'transparent', \n            justifyContent:\"center\", \n            alignSelf:\"center\",\n            width: \"80%\",\n            marginTop: 6\n            }}>\n          <Picker\n            mode=\"dropdown\"\n            iosIcon={<Icon color={\"#007aff\"} name=\"arrow-down\" />}\n            style={{ justifyContent: \"center\",\n                    alignSelf: \"center\",\n                    paddingTop: 7,\n                    paddingBottom: 7,\n                    paddingLeft: 20,\n                    borderRadius: 40,\n                    width: \"80%\",\n                    marginBottom: 15,\n                    backgroundColor: \"rgba(102,102,102,0.6)\" }}\n            placeholder=\"Select your Category\"\n            selectedValue={pickerValue}\n            placeholderStyle={{ color: \"#007aff\" }}\n            placeholderIconColor= \"#007aff\"\n            onValueChange={itemValue => \n                [setPickerValue(itemValue), setCategory(itemValue)]}\n          >\n            {/* {categories.map((c) => {\n                console.log(\"pickerValue = \" + pickerValue);\n              return <Picker.Item key={c._id} label={c.name} value={c._id} />;\n            })} */}\n\n           {/* {categories.map((c) => {\n            return <Picker key={c.id} label={c.name} value={c.name} />;\n           })}\n          </Picker>\n        </View> */} \n\n\n        <View style={styles.buttonGroup}>\n          {error ? <Error message={error} /> : null}\n        </View>\n         \n     <View style={styles.options}>\n         \n    \n          <EasyButton\n            large\n            secondary\n            onPress={() => props.navigation.navigate(\"Login\")}\n          >\n            <Text style={{ color: \"white\" }}>Back to Login</Text>\n          </EasyButton>\n\n          <EasyButton\n            large\n            secondary\n            onPress={() => props.navigation.navigate(\"serviceForm\")}\n          >\n            <Text style={{ color: \"white\" }}>Vos services</Text>\n          </EasyButton>\n\n{/* \n          <EasyButton\n            large\n            secondary\n            onPress={() => props.navigation.navigate(\"ImageScreen\")}\n          >\n            <Text style={{ color: \"white\" }}>DropDownPicker</Text>\n          </EasyButton> */}\n\n\n          <EasyButton large primary onPress={() => register()}>\n            <Text style={{ color: \"white\" }}>Register</Text>\n          </EasyButton>\n        </View>\n      </FormContainer>\n    </KeyboardAwareScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  buttonGroup: {\n    width: \"80%\",\n    margin: 10,\n    alignItems: \"center\",\n  },\n  options:{\n\n    //pour aligner les buttons sur la meme ligne\n    flexDirection: 'row',\n    // alignContent: 'space-around',\n    justifyContent: 'space-between',\n            // \"space-around\",   \"space-between\",\n},\ninputgauche:{\n    marginRight: 8,\n},\npic:{\n  // flex: 1,\n  // paddingTop: 40,\n  // alignItems: \"center\",\n  width: '80%',\n  height: 50,\n  // backgroundColor: \"#f5f5dc\",\n        borderRadius: 20,\n        backgroundColor: 'white',\n        margin: 10,\n        borderRadius: 20,\n        padding: 10,\n        borderWidth: 2,\n        borderColor: 'orange',\n        justifyContent: 'center'},\nexample: {\n  marginVertical: 24,\n  padding: 10,\n  margin: 10,\n  fontSize:50,\n\n},\npro:{\n  margin: 10,\n  width: '80%',\n  height: 50,\n\n},\n\ncontainer: {\n  flex: 1,\n  justifyContent: 'center',\n  alignItems: 'center',\n},\nphoneContainer: {\n  width: '80%',\n  height: 50,\n        borderRadius: 20,\n        backgroundColor: 'white',\n        margin: 10,\n        borderRadius: 20,\n        padding: 10,\n        borderWidth: 2,\n        borderColor: 'orange',\n        justifyContent: 'center'\n},\nbutton: {\n  marginTop: 30,\n  width: '75%',\n  padding: 10,\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: 'green',\n},\ntextInput: {\n  paddingVertical: 0,\n}\n});\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}
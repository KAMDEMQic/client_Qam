{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Item, Picker } from \"native-base\";\nimport FormContainer from \"../../Shared/Form/FormContainer\";\nimport Inputt from \"../../Shared/Form/Inputt\";\nimport Input from \"../../Shared/Form/Input\";\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\";\nimport Error from \"../../Shared/Error\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Toast from \"react-native-toast-message\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport baseURL from \"../../assets/common/baseUrl\";\nimport axios from \"axios\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport mime from \"mime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar serviceForm = function serviceForm(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      pickerValue = _useState2[0],\n      setPickerValue = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      storeName = _useState4[0],\n      setstoreName = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      price = _useState8[0],\n      setPrice = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      description = _useState10[0],\n      setDescription = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      image = _useState12[0],\n      setImage = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      mainImage = _useState14[0],\n      setMainImage = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      category = _useState16[0],\n      setCategory = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      categories = _useState18[0],\n      setCategories = _useState18[1];\n\n  var _useState19 = useState(),\n      _useState20 = _slicedToArray(_useState19, 2),\n      token = _useState20[0],\n      setToken = _useState20[1];\n\n  var _useState21 = useState(),\n      _useState22 = _slicedToArray(_useState21, 2),\n      err = _useState22[0],\n      setError = _useState22[1];\n\n  var _useState23 = useState(),\n      _useState24 = _slicedToArray(_useState23, 2),\n      countInStock = _useState24[0],\n      setCountInStock = _useState24[1];\n\n  var _useState25 = useState(0),\n      _useState26 = _slicedToArray(_useState25, 2),\n      adress = _useState26[0],\n      setAdress = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      isFeatured = _useState28[0],\n      setIsFeature = _useState28[1];\n\n  var _useState29 = useState(),\n      _useState30 = _slicedToArray(_useState29, 2),\n      richDescription = _useState30[0],\n      setRichDescription = _useState30[1];\n\n  var _useState31 = useState(0),\n      _useState32 = _slicedToArray(_useState31, 2),\n      numReviews = _useState32[0],\n      setNumReviews = _useState32[1];\n\n  var _useState33 = useState(null),\n      _useState34 = _slicedToArray(_useState33, 2),\n      item = _useState34[0],\n      setItem = _useState34[1];\n\n  useEffect(function () {\n    if (!props.route.params) {\n      setItem(null);\n    } else {\n      setItem(props.route.params.item);\n      setstoreName(props.route.params.item.storeName);\n      setName(props.route.params.item.name);\n      setPrice(props.route.params.item.price.toString());\n      setDescription(props.route.params.item.description);\n      setMainImage(props.route.params.item.image);\n      setImage(props.route.params.item.image);\n      setCategory(props.route.params.item.category._id);\n      setCountInStock(props.route.params.item.countInStock.toString());\n    }\n\n    AsyncStorage.getItem(\"jwt\").then(function (res) {\n      setToken(res);\n    }).catch(function (error) {\n      return console.log(error);\n    });\n    axios.get(baseURL + \"categories\").then(function (res) {\n      return setCategories(res.data);\n    }).catch(function (error) {\n      return alert(\"Error to load categories\");\n    });\n\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== \"web\")) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== \"granted\") {\n                alert(\"Sorry, we need camera roll permissions to make this work!\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n\n    return function () {\n      setCategories([]);\n    };\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              setMainImage(result.uri);\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addProduct = function addProduct() {\n    if (name == \"\" || storeName == \"\" || price == \"\" || description == \"\" || category == \"\" || countInStock == \"\" || adress == \"\") {\n      setError(\"Please fill in the form correctly\");\n    }\n\n    var formData = new FormData();\n    var newImageUri = \"file:///\" + image.split(\"file:/\").join(\"\");\n    formData.append(\"image\", {\n      uri: newImageUri,\n      type: mime.getType(newImageUri),\n      name: newImageUri.split(\"/\").pop()\n    });\n    formData.append(\"name\", name);\n    formData.append(\"storeName\", storeName);\n    formData.append(\"price\", price);\n    formData.append(\"description\", description);\n    formData.append(\"category\", category);\n    formData.append(\"countInStock\", countInStock);\n    formData.append(\"richDescription\", richDescription);\n    formData.append(\"adress\", adress);\n    formData.append(\"numReviews\", numReviews);\n    formData.append(\"isFeatured\", isFeatured);\n    var config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: \"Bearer \" + token\n      }\n    };\n    axios.post(baseURL + \"products\", formData, config).then(function (res) {\n      if (res.status == 200 || res.status == 201) {\n        Toast.show({\n          topOffset: 60,\n          type: \"success\",\n          text1: \"New Product added\",\n          text2: \"\"\n        });\n        console.log(res.data);\n      }\n    }).catch(function (error) {\n      Toast.show({\n        topOffset: 60,\n        type: \"error\",\n        text1: \"Something went wrong\",\n        text2: \"Please try again\"\n      });\n    });\n  };\n\n  return _jsxs(FormContainer, {\n    title: \"Service\",\n    children: [_jsxs(View, {\n      style: styles.imageContainer,\n      children: [_jsx(Image, {\n        style: styles.image,\n        source: {\n          uri: mainImage\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: pickImage,\n        style: styles.imagePicker,\n        children: _jsx(Icon, {\n          style: {\n            color: \"white\"\n          },\n          name: \"camera\"\n        })\n      })]\n    }), _jsx(Input, {\n      placeholder: \"storeName\",\n      name: \"storeName\",\n      id: \"storeName\",\n      value: storeName,\n      onChangeText: function onChangeText(text) {\n        return setstoreName(text);\n      }\n    }), _jsx(Input, {\n      placeholder: \"Name\",\n      name: \"name\",\n      id: \"name\",\n      value: name,\n      onChangeText: function onChangeText(text) {\n        return setName(text);\n      }\n    }), _jsxs(View, {\n      style: styles.options,\n      children: [_jsx(Inputt, {\n        placeholder: \"Price\",\n        name: \"price\",\n        id: \"price\",\n        value: price,\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(text) {\n          return setPrice(text);\n        }\n      }), _jsx(Inputt, {\n        placeholder: \"Stock\",\n        name: \"stock\",\n        id: \"stock\",\n        value: countInStock,\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(text) {\n          return setCountInStock(text);\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.options,\n      children: [_jsx(Inputt, {\n        placeholder: \"Description\",\n        name: \"description\",\n        id: \"description\",\n        value: description,\n        onChangeText: function onChangeText(text) {\n          return setDescription(text);\n        }\n      }), _jsx(Inputt, {\n        placeholder: \"Description\",\n        name: \"description\",\n        id: \"description\",\n        value: description,\n        onChangeText: function onChangeText(text) {\n          return setDescription(text);\n        }\n      })]\n    }), _jsx(Item, {\n      picker: true,\n      children: _jsx(Picker, {\n        mode: \"dropdown\",\n        iosIcon: _jsx(Icon, {\n          color: \"#007aff\",\n          name: \"arrow-down\"\n        }),\n        style: {\n          width: undefined\n        },\n        placeholder: \"Select your Category\",\n        selectedValue: pickerValue,\n        placeholderStyle: {\n          color: \"#007aff\"\n        },\n        placeholderIconColor: \"#007aff\",\n        onValueChange: function onValueChange(e) {\n          return [setPickerValue(e), setCategory(e)];\n        },\n        children: categories.map(function (c) {\n          return _jsx(Picker.Item, {\n            label: c.name,\n            value: c.id\n          }, c.id);\n        })\n      })\n    }), err ? _jsx(Error, {\n      message: err\n    }) : null, _jsx(View, {\n      style: styles.buttonContainer,\n      children: _jsx(EasyButton, {\n        large: true,\n        primary: true,\n        onPress: function onPress() {\n          return addProduct();\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Confirm\"\n        })\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  label: {\n    width: \"80%\",\n    marginTop: 10\n  },\n  buttonContainer: {\n    width: \"80%\",\n    marginBottom: 80,\n    marginTop: 20,\n    alignItems: \"center\"\n  },\n  buttonText: {\n    color: \"white\"\n  },\n  imageContainer: {\n    width: 200,\n    height: 200,\n    borderStyle: \"solid\",\n    borderWidth: 8,\n    padding: 0,\n    justifyContent: \"center\",\n    borderRadius: 100,\n    borderColor: \"#E0E0E0\",\n    elevation: 10\n  },\n  image: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 100\n  },\n  imagePicker: {\n    position: \"absolute\",\n    right: 5,\n    bottom: 5,\n    backgroundColor: \"grey\",\n    padding: 8,\n    borderRadius: 100,\n    elevation: 20\n  },\n  options: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  inputgauche: {\n    marginRight: 8\n  }\n});\nexport default serviceForm;","map":{"version":3,"sources":["/home/theo/Bureau/react/QAM_U/qam/Screens/User/serviceForm.js"],"names":["React","useState","useEffect","Item","Picker","FormContainer","Inputt","Input","EasyButton","Error","Icon","Toast","AsyncStorage","baseURL","axios","ImagePicker","mime","serviceForm","props","pickerValue","setPickerValue","storeName","setstoreName","name","setName","price","setPrice","description","setDescription","image","setImage","mainImage","setMainImage","category","setCategory","categories","setCategories","token","setToken","err","setError","countInStock","setCountInStock","adress","setAdress","isFeatured","setIsFeature","richDescription","setRichDescription","numReviews","setNumReviews","item","setItem","route","params","toString","_id","getItem","then","res","catch","error","console","log","get","data","alert","Platform","OS","requestCameraPermissionsAsync","status","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uri","addProduct","formData","FormData","newImageUri","split","join","append","type","getType","pop","config","headers","Authorization","post","show","topOffset","text1","text2","styles","imageContainer","imagePicker","color","text","options","width","undefined","e","map","c","id","buttonContainer","buttonText","StyleSheet","create","label","marginTop","marginBottom","alignItems","height","borderStyle","borderWidth","padding","justifyContent","borderRadius","borderColor","elevation","position","right","bottom","backgroundColor","flexDirection","inputgauche","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { \n    View, \n    Text,\n    Image,\n    StyleSheet,\n    TouchableOpacity,\n    Platform\n} from \"react-native\"\nimport { Item, Picker } from \"native-base\"\nimport FormContainer from \"../../Shared/Form/FormContainer\"\nimport Inputt from \"../../Shared/Form/Inputt\"\nimport Input from \"../../Shared/Form/Input\"\n\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\"\nimport Error from \"../../Shared/Error\"\nimport Icon from \"react-native-vector-icons/FontAwesome\"\nimport Toast from \"react-native-toast-message\"\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport baseURL from \"../../assets/common/baseUrl\"\nimport axios from \"axios\"\nimport * as ImagePicker from \"expo-image-picker\"\nimport mime from \"mime\";\n\nconst serviceForm = (props) => {\n    \n    const [pickerValue, setPickerValue] = useState();\n    const [storeName, setstoreName] = useState();\n    const [name, setName] = useState();\n    const [price, setPrice] = useState();\n    const [description, setDescription] = useState();\n    const [image, setImage] = useState();\n    const [mainImage, setMainImage] = useState();\n    const [category, setCategory] = useState();\n    const [categories, setCategories] = useState([]);\n    const [token, setToken] = useState();\n    const [err, setError] = useState();\n    const [countInStock, setCountInStock] = useState();\n    const [adress, setAdress] = useState(0);\n    const [isFeatured, setIsFeature] = useState(false);\n    const [richDescription, setRichDescription] = useState();\n    const [numReviews, setNumReviews] = useState(0);\n    const [item, setItem] = useState(null);\n\n    useEffect(() => {\n\n        if(!props.route.params) {\n            setItem(null);\n        } else {\n            setItem(props.route.params.item);\n            setstoreName(props.route.params.item.storeName);\n            setName(props.route.params.item.name);\n            setPrice(props.route.params.item.price.toString());\n            setDescription(props.route.params.item.description);\n            setMainImage(props.route.params.item.image);\n            setImage(props.route.params.item.image);\n            setCategory(props.route.params.item.category._id);\n            setCountInStock(props.route.params.item.countInStock.toString());\n        }\n\n        AsyncStorage.getItem(\"jwt\")\n            .then((res) => {\n                setToken(res)\n            })\n            .catch((error) => console.log(error))\n\n        // Categories\n        axios\n            .get(`${baseURL}categories`)\n            .then((res) => setCategories(res.data))\n            .catch((error) => alert(\"Error to load categories\"));\n\n          (async () => {\n            if (Platform.OS !== \"web\") {\n                const {\n                    status,\n                } = await ImagePicker.requestCameraPermissionsAsync();\n                if (status !== \"granted\") {\n                    alert(\"Sorry, we need camera roll permissions to make this work!\")\n                }\n            }\n        })();\n\n        return () => {\n            setCategories([])\n        }\n    }, [])\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1\n        });\n\n        if (!result.cancelled) {\n            setMainImage(result.uri);\n            setImage(result.uri);\n        }\n    };\n\n    const addProduct = () => {\n        if (\n            name == \"\" ||\n            storeName == \"\" ||\n            price == \"\" ||\n            description == \"\" ||\n            category == \"\" ||\n            countInStock == \"\" ||\n            adress == \"\"\n        ) {\n            setError(\"Please fill in the form correctly\")\n        }\n\n        let formData = new FormData();\n        const newImageUri = \"file:///\" + image.split(\"file:/\").join(\"\");\n\n        formData.append(\"image\", {\n            uri: newImageUri,\n            type: mime.getType(newImageUri),\n            name: newImageUri.split(\"/\").pop()\n        });\n        formData.append(\"name\", name);\n        formData.append(\"storeName\", storeName);\n        formData.append(\"price\", price);\n        formData.append(\"description\", description);\n        formData.append(\"category\", category);\n        formData.append(\"countInStock\", countInStock);\n        formData.append(\"richDescription\", richDescription);\n        formData.append(\"adress\", adress);\n        formData.append(\"numReviews\", numReviews);\n        formData.append(\"isFeatured\", isFeatured);\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        // if(item !== null) {\n        //     axios\n        //     .put(`${baseURL}products/${item.id}`, formData, config)\n        //     .then((res) => {\n        //         if(res.status == 200 || res.status == 201) {\n        //             Toast.show({\n        //                 topOffset: 60,\n        //                 type: \"success\",\n        //                 text1: \"Product successfuly updated\",\n        //                 text2: \"\"\n        //             });\n        //             setTimeout(() => {\n        //                 props.navigation.navigate(\"Products\");\n        //             }, 500)\n        //         }\n        //     })\n        //     .catch((error) => {\n        //         Toast.show({\n        //             topOffset: 60,\n        //                 type: \"error\",\n        //                 text1: \"Something went wrong\",\n        //                 text2: \"Please try again\"\n        //         })\n        //     })\n        // } else {\n            axios\n            .post(`${baseURL}products`, formData, config)\n            .then((res) => {\n                if(res.status == 200 || res.status == 201) {\n                    Toast.show({\n                        topOffset: 60,\n                        type: \"success\",\n                        text1: \"New Product added\",\n                        text2: \"\",\n                    });\n                    // setTimeout(() => {\n                    //     console.log(res.data);\n                    //     props.navigation.navigate(\"Products\");\n                    // }, 500);\n                    console.log(res.data);\n                }\n            })\n            .catch((error) => {\n                Toast.show({\n                    topOffset: 60,\n                        type: \"error\",\n                        text1: \"Something went wrong\",\n                        text2: \"Please try again\"\n                });\n            });\n        // } \n    }\n\n    return (\n       <FormContainer title=\"Service\">\n           <View style={styles.imageContainer}>\n               <Image style={styles.image} source={{uri: mainImage}}/>\n               <TouchableOpacity onPress={pickImage} style={styles.imagePicker}>\n                   <Icon style={{ color: \"white\"}} name=\"camera\"/>\n               </TouchableOpacity>\n           </View>\n           {/* <View style={styles.label}>\n               <Text style={{ textDecorationLine: \"underline\"}}>Marques</Text>\n           </View> */}\n           <Input \n            placeholder=\"storeName\"\n            name=\"storeName\"\n            id=\"storeName\"\n            value={storeName}\n            onChangeText={(text) => setstoreName(text)}\n           />\n           {/* <View style={styles.label}>\n               <Text style={{ textDecorationLine: \"underline\"}}>Nom</Text>\n\n           </View> */}\n           <Input \n            placeholder=\"Name\"\n            name=\"name\"\n            id=\"name\"\n            value={name}\n            onChangeText={(text) => setName(text)}\n           />\n            {/* <View style={styles.label}>\n               <Text style={{ textDecorationLine: \"underline\"}}>Prix</Text>\n           </View> */}\n\n           <View style={styles.options}>\n           <Inputt \n            placeholder=\"Price\"\n            name=\"price\"\n            id=\"price\"\n            value={price}\n            keyboardType={\"numeric\"}\n            onChangeText={(text) => setPrice(text)}\n           />\n           \n{/* \n           <View style={styles.label}>\n               <Text style={{ textDecorationLine: \"underline\"}}>Quantite en Stock</Text>\n           </View> */}\n           \n           <Inputt  \n            placeholder=\"Stock\"\n            name=\"stock\"\n            id=\"stock\"\n            value={countInStock}\n            keyboardType={\"numeric\"}\n            onChangeText={(text) => setCountInStock(text)}\n           />\n               </View>\n           \n           \n           \n      \n{/*        \n            <View style={styles.label}>\n               <Text style={{ textDecorationLine: \"underline\"}}>Description</Text>\n           </View> */}\n     \n     <View style={styles.options}>\n\n           <Inputt \n            placeholder=\"Description\"\n            name=\"description\"\n            id=\"description\"\n            value={description}\n            onChangeText={(text) => setDescription(text)}\n\n           />\n\n\n\n          <Inputt \n            placeholder=\"Description\"\n            name=\"description\"\n            id=\"description\"\n            value={description}\n            onChangeText={(text) => setDescription(text)}\n\n           />  \n        </View>\n            \n            <Item picker>\n                <Picker\n                    mode=\"dropdown\"\n                    iosIcon={<Icon color={\"#007aff\"} name=\"arrow-down\" />}\n                    style={{ width: undefined }}\n                    placeholder=\"Select your Category\"\n                    selectedValue={pickerValue}\n                    placeholderStyle={{ color: \"#007aff\"}}\n                    placeholderIconColor=\"#007aff\"\n                    onValueChange={(e) => [setPickerValue(e), setCategory(e)]}\n                >\n                    {categories.map((c) => {\n                        return <Picker.Item key={c.id} label={c.name} value={c.id} />\n                    })}\n                </Picker>\n           </Item>\n\n             \n           {err ? <Error message={err} /> : null}\n           <View style={styles.buttonContainer}>\n               <EasyButton\n                large\n                primary\n                onPress={() => addProduct()}               \n               >\n                   <Text style={styles.buttonText}>Confirm</Text>\n               </EasyButton>\n           </View>\n           </FormContainer>     \n\n    \n    )\n}\n\nconst styles = StyleSheet.create({\n    label: {\n        width: \"80%\",\n        marginTop: 10\n    },\n    buttonContainer: {\n        width: \"80%\",\n        marginBottom: 80,\n        marginTop: 20,\n        alignItems: \"center\"\n    },\n    buttonText: {\n        color: \"white\"\n    },\n    imageContainer: {\n        width: 200,\n        height: 200,\n        borderStyle: \"solid\",\n        borderWidth: 8,\n        padding: 0,\n        justifyContent: \"center\",\n        borderRadius: 100,\n        borderColor: \"#E0E0E0\",\n        elevation: 10\n    },\n    image: {\n        width: \"100%\",\n        height: \"100%\",\n        borderRadius: 100\n    },\n    imagePicker: {\n        position: \"absolute\",\n        right: 5,\n        bottom: 5,\n        backgroundColor: \"grey\",\n        padding: 8,\n        borderRadius: 100,\n        elevation: 20\n    },\n\n    options:{\n        flexDirection: 'row',\n        // alignContent: 'space-around',\n        justifyContent: 'space-between',\n                // \"space-around\",   \"space-between\",\n\n\n\n\n    },\n    inputgauche:{\n        marginRight: 8,\n\n     \n    },\n})\n\nexport default serviceForm;"]},"metadata":{},"sourceType":"module"}
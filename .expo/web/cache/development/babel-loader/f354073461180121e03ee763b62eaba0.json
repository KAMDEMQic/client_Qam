{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Item, Picker } from \"native-base\";\nimport FormContainer from \"../../Shared/Form/FormContainer\";\nimport Inputt from \"../../Shared/Form/Inputt\";\nimport Input from \"../../Shared/Form/Input\";\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\";\nimport Error from \"../../Shared/Error\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Toast from \"react-native-toast-message\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport baseURL from \"../../assets/common/baseUrl\";\nimport axios from \"axios\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport mime from \"mime\";\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar serviceForm = function serviceForm(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      pickerValue = _useState2[0],\n      setPickerValue = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      storeName = _useState4[0],\n      setstoreName = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      price = _useState8[0],\n      setPrice = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      description = _useState10[0],\n      setDescription = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      image = _useState12[0],\n      setImage = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      mainImage = _useState14[0],\n      setMainImage = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      category = _useState16[0],\n      setCategory = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      categories = _useState18[0],\n      setCategories = _useState18[1];\n\n  var _useState19 = useState(),\n      _useState20 = _slicedToArray(_useState19, 2),\n      token = _useState20[0],\n      setToken = _useState20[1];\n\n  var _useState21 = useState(),\n      _useState22 = _slicedToArray(_useState21, 2),\n      err = _useState22[0],\n      setError = _useState22[1];\n\n  var _useState23 = useState(),\n      _useState24 = _slicedToArray(_useState23, 2),\n      countInStock = _useState24[0],\n      setCountInStock = _useState24[1];\n\n  var _useState25 = useState(0),\n      _useState26 = _slicedToArray(_useState25, 2),\n      adress = _useState26[0],\n      setAdress = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      isFeatured = _useState28[0],\n      setIsFeature = _useState28[1];\n\n  var _useState29 = useState(),\n      _useState30 = _slicedToArray(_useState29, 2),\n      richDescription = _useState30[0],\n      setRichDescription = _useState30[1];\n\n  var _useState31 = useState(0),\n      _useState32 = _slicedToArray(_useState31, 2),\n      numReviews = _useState32[0],\n      setNumReviews = _useState32[1];\n\n  var _useState33 = useState(null),\n      _useState34 = _slicedToArray(_useState33, 2),\n      item = _useState34[0],\n      setItem = _useState34[1];\n\n  useEffect(function () {\n    AsyncStorage.getItem(\"jwt\").then(function (res) {\n      setToken(res);\n    }).catch(function (error) {\n      return console.log(error);\n    });\n    axios.get(baseURL + \"categories\").then(function (res) {\n      return setCategories(res.data);\n    }).catch(function (error) {\n      return alert(\"Error to load categories\");\n    });\n\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== \"web\")) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== \"granted\") {\n                alert(\"Sorry, we need camera roll permissions to make this work!\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n\n    return function () {\n      setCategories([]);\n      console.log(categories.length);\n    };\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              setMainImage(result.uri);\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addProduct = function addProduct() {\n    if (name == \"\" || storeName == \"\" || price == \"\" || description == \"\" || category == \"\" || countInStock == \"\" || adress == \"\") {\n      setError(\"Please fill in the form correctly\");\n    }\n\n    var formData = new FormData();\n    var newImageUri = \"file:///\" + image.split(\"file:/\").join(\"\");\n    formData.append(\"image\", {\n      uri: newImageUri,\n      type: mime.getType(newImageUri),\n      name: newImageUri.split(\"/\").pop()\n    });\n    formData.append(\"name\", name);\n    formData.append(\"storeName\", storeName);\n    formData.append(\"price\", price);\n    formData.append(\"description\", description);\n    formData.append(\"category\", category);\n    formData.append(\"countInStock\", countInStock);\n    formData.append(\"richDescription\", richDescription);\n    formData.append(\"adress\", adress);\n    formData.append(\"numReviews\", numReviews);\n    formData.append(\"isFeatured\", isFeatured);\n    var config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: \"Bearer \" + token\n      }\n    };\n    axios.post(baseURL + \"products\", formData, config).then(function (res) {\n      if (res.status == 200 || res.status == 201) {\n        Toast.show({\n          topOffset: 60,\n          type: \"success\",\n          text1: \"New Product added\",\n          text2: \"\"\n        });\n        console.log(res.data);\n      }\n    }).catch(function (error) {\n      Toast.show({\n        topOffset: 60,\n        type: \"error\",\n        text1: \"Something went wrong\",\n        text2: \"Please try again\"\n      });\n    });\n  };\n\n  return _jsxs(FormContainer, {\n    title: \"Service\",\n    children: [_jsxs(View, {\n      style: styles.imageContainer,\n      children: [_jsx(Image, {\n        style: styles.image,\n        source: {\n          uri: mainImage\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: pickImage,\n        style: styles.imagePicker,\n        children: _jsx(Icon, {\n          style: {\n            color: \"white\"\n          },\n          name: \"camera\"\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.pic,\n      children: _jsx(Item, {\n        picker: true,\n        children: _jsx(Picker, {\n          mode: \"dropdown\",\n          iosIcon: _jsx(Icon, {\n            color: \"#007aff\",\n            name: \"arrow-down\"\n          }),\n          style: {\n            width: undefined\n          },\n          placeholder: \"Select your Category\",\n          selectedValue: category,\n          placeholderStyle: {\n            color: \"#007aff\"\n          },\n          placeholderIconColor: \"#007aff\",\n          onValueChange: function onValueChange(e) {\n            return setCategory(e);\n          },\n          children: categories.map(function (c) {\n            return _jsx(Picker.Item, {\n              label: c.name,\n              value: c.name\n            }, c.id);\n          })\n        })\n      })\n    }), _jsx(Input, {\n      placeholder: \"storeName\",\n      name: \"storeName\",\n      id: \"storeName\",\n      value: storeName,\n      onChangeText: function onChangeText(text) {\n        return setstoreName(text);\n      }\n    }), _jsx(Input, {\n      placeholder: \"Name\",\n      name: \"name\",\n      id: \"name\",\n      value: name,\n      onChangeText: function onChangeText(text) {\n        return setName(text);\n      }\n    }), _jsxs(View, {\n      style: styles.options,\n      children: [_jsx(Inputt, {\n        placeholder: \"Price\",\n        name: \"price\",\n        id: \"price\",\n        value: price,\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(text) {\n          return setPrice(text);\n        }\n      }), _jsx(Inputt, {\n        placeholder: \"Stock\",\n        name: \"stock\",\n        id: \"stock\",\n        value: countInStock,\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(text) {\n          return setCountInStock(text);\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.options,\n      children: [_jsx(Inputt, {\n        placeholder: \"Description\",\n        name: \"description\",\n        id: \"description\",\n        value: description,\n        onChangeText: function onChangeText(text) {\n          return setDescription(text);\n        }\n      }), _jsx(Inputt, {\n        placeholder: \"Description\",\n        name: \"description\",\n        id: \"description\",\n        value: description,\n        onChangeText: function onChangeText(text) {\n          return setDescription(text);\n        }\n      })]\n    }), _jsx(EasyButton, {\n      large: true,\n      secondary: true,\n      onPress: function onPress() {\n        return props.navigation.navigate(\"AddOption\");\n      },\n      children: _jsx(Text, {\n        style: {\n          color: \"white\"\n        },\n        children: \"AddOption\"\n      })\n    }), err ? _jsx(Error, {\n      message: err\n    }) : null, _jsx(View, {\n      style: styles.buttonContainer,\n      children: _jsx(EasyButton, {\n        large: true,\n        primary: true,\n        onPress: function onPress() {\n          return addProduct();\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Confirm\"\n        })\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  label: {\n    width: \"80%\",\n    marginTop: 10\n  },\n  buttonContainer: {\n    width: \"80%\",\n    marginBottom: 80,\n    marginTop: 20,\n    alignItems: \"center\"\n  },\n  buttonText: {\n    color: \"white\"\n  },\n  imageContainer: {\n    width: 200,\n    height: 200,\n    borderStyle: \"solid\",\n    borderWidth: 8,\n    padding: 0,\n    justifyContent: \"center\",\n    borderRadius: 100,\n    borderColor: \"#E0E0E0\",\n    elevation: 10\n  },\n  image: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 100\n  },\n  imagePicker: {\n    position: \"absolute\",\n    right: 5,\n    bottom: 5,\n    backgroundColor: \"grey\",\n    padding: 8,\n    borderRadius: 100,\n    elevation: 20\n  },\n  options: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  inputgauche: {\n    marginRight: 8\n  },\n  pic: {\n    width: '80%',\n    height: 50,\n    borderRadius: 20,\n    backgroundColor: 'white',\n    margin: 10,\n    borderRadius: 20,\n    padding: 10,\n    borderWidth: 2,\n    borderColor: 'orange',\n    justifyContent: 'center'\n  }\n});\nexport default serviceForm;","map":{"version":3,"sources":["/home/theo/Bureau/react/QAM_U/client_Qam/Screens/User/serviceForm.js"],"names":["React","useState","useEffect","Item","Picker","FormContainer","Inputt","Input","EasyButton","Error","Icon","Toast","AsyncStorage","baseURL","axios","ImagePicker","mime","DropDownPicker","serviceForm","props","pickerValue","setPickerValue","storeName","setstoreName","name","setName","price","setPrice","description","setDescription","image","setImage","mainImage","setMainImage","category","setCategory","categories","setCategories","token","setToken","err","setError","countInStock","setCountInStock","adress","setAdress","isFeatured","setIsFeature","richDescription","setRichDescription","numReviews","setNumReviews","item","setItem","getItem","then","res","catch","error","console","log","get","data","alert","Platform","OS","requestCameraPermissionsAsync","status","length","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uri","addProduct","formData","FormData","newImageUri","split","join","append","type","getType","pop","config","headers","Authorization","post","show","topOffset","text1","text2","styles","imageContainer","imagePicker","color","pic","width","undefined","e","map","c","id","text","options","navigation","navigate","buttonContainer","buttonText","StyleSheet","create","label","marginTop","marginBottom","alignItems","height","borderStyle","borderWidth","padding","justifyContent","borderRadius","borderColor","elevation","position","right","bottom","backgroundColor","flexDirection","inputgauche","marginRight","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { \n    View, \n    Text,\n    Image,\n    StyleSheet,\n    TouchableOpacity,\n    Platform\n} from \"react-native\"\nimport { Item, Picker } from \"native-base\"\nimport FormContainer from \"../../Shared/Form/FormContainer\"\nimport Inputt from \"../../Shared/Form/Inputt\"\nimport Input from \"../../Shared/Form/Input\"\n\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\"\nimport Error from \"../../Shared/Error\"\nimport Icon from \"react-native-vector-icons/FontAwesome\"\nimport Toast from \"react-native-toast-message\"\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport baseURL from \"../../assets/common/baseUrl\"\nimport axios from \"axios\"\nimport * as ImagePicker from \"expo-image-picker\"\nimport mime from \"mime\";\nimport DropDownPicker from 'react-native-dropdown-picker';\n\nconst serviceForm = (props) => {\n    \n    const [pickerValue, setPickerValue] = useState();\n    const [storeName, setstoreName] = useState();\n    const [name, setName] = useState();\n    const [price, setPrice] = useState();\n    const [description, setDescription] = useState();\n    const [image, setImage] = useState();\n    const [mainImage, setMainImage] = useState();\n    const [category, setCategory] = useState();\n    const [categories, setCategories] = useState([]);\n    const [token, setToken] = useState();\n    const [err, setError] = useState();\n    const [countInStock, setCountInStock] = useState();\n    const [adress, setAdress] = useState(0);\n    const [isFeatured, setIsFeature] = useState(false);\n    const [richDescription, setRichDescription] = useState();\n    const [numReviews, setNumReviews] = useState(0);\n    const [item, setItem] = useState(null);\n\n    useEffect(() => {\n\n\n        AsyncStorage.getItem(\"jwt\")\n            .then((res) => {\n                setToken(res)\n            })\n            .catch((error) => console.log(error))\n\n        // Categories\n        axios\n            .get(`${baseURL}categories`)\n            .then((res) => setCategories(res.data))\n            .catch((error) => alert(\"Error to load categories\"));\n            // console.log(categories);\n\n\n          (async () => {\n            if (Platform.OS !== \"web\") {\n                const {\n                    status,\n                } = await ImagePicker.requestCameraPermissionsAsync();\n                if (status !== \"granted\") {\n                    alert(\"Sorry, we need camera roll permissions to make this work!\")\n                }\n            }\n        })();\n\n        return () => {\n            setCategories([]);\n            \n             console.log(categories.length);\n\n        }\n    }, [])\n\n\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1\n        });\n\n        if (!result.cancelled) {\n            setMainImage(result.uri);\n            setImage(result.uri);\n        }\n    };\n\n    const addProduct = () => {\n        if (\n            name == \"\" ||\n            storeName == \"\" ||\n            price == \"\" ||\n            description == \"\" ||\n            category == \"\" ||\n            countInStock == \"\" ||\n            adress == \"\"\n        ) {\n            setError(\"Please fill in the form correctly\")\n        }\n\n        let formData = new FormData();\n        const newImageUri = \"file:///\" + image.split(\"file:/\").join(\"\");\n\n        formData.append(\"image\", {\n            uri: newImageUri,\n            type: mime.getType(newImageUri),\n            name: newImageUri.split(\"/\").pop()\n        });\n        formData.append(\"name\", name);\n        formData.append(\"storeName\", storeName);\n        formData.append(\"price\", price);\n        formData.append(\"description\", description);\n        formData.append(\"category\", category);\n        formData.append(\"countInStock\", countInStock);\n        formData.append(\"richDescription\", richDescription);\n        formData.append(\"adress\", adress);\n        formData.append(\"numReviews\", numReviews);\n        formData.append(\"isFeatured\", isFeatured);\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        // if(item !== null) {\n        //     axios\n        //     .put(`${baseURL}products/${item.id}`, formData, config)\n        //     .then((res) => {\n        //         if(res.status == 200 || res.status == 201) {\n        //             Toast.show({\n        //                 topOffset: 60,\n        //                 type: \"success\",\n        //                 text1: \"Product successfuly updated\",\n        //                 text2: \"\"\n        //             });\n        //             setTimeout(() => {\n        //                 props.navigation.navigate(\"Products\");\n        //             }, 500)\n        //         }\n        //     })\n        //     .catch((error) => {\n        //         Toast.show({\n        //             topOffset: 60,\n        //                 type: \"error\",\n        //                 text1: \"Something went wrong\",\n        //                 text2: \"Please try again\"\n        //         })\n        //     })\n        // } else {\n            axios\n            .post(`${baseURL}products`, formData, config)\n            .then((res) => {\n                if(res.status == 200 || res.status == 201) {\n                    Toast.show({\n                        topOffset: 60,\n                        type: \"success\",\n                        text1: \"New Product added\",\n                        text2: \"\",\n                    });\n                    // setTimeout(() => {\n                    //     console.log(res.data);\n                    //     props.navigation.navigate(\"Products\");\n                    // }, 500);\n                    console.log(res.data);\n                }\n            })\n            .catch((error) => {\n                Toast.show({\n                    topOffset: 60,\n                        type: \"error\",\n                        text1: \"Something went wrong\",\n                        text2: \"Please try again\"\n                });\n            });\n        // } \n    }\n\n    return (\n       <FormContainer title=\"Service\">\n           <View style={styles.imageContainer}>\n               <Image style={styles.image} source={{uri: mainImage}}/>\n               <TouchableOpacity onPress={pickImage} style={styles.imagePicker}>\n                   <Icon style={{ color: \"white\"}} name=\"camera\"/>\n               </TouchableOpacity>\n           </View>\n           {/* <View style={styles.label}>\n               <Text style={{ textDecorationLine: \"underline\"}}>Marques</Text>\n           </View> */}\n\n<View style={styles.pic}>\n\n<Item picker>\n   <Picker\n       mode=\"dropdown\"\n       iosIcon={<Icon color={\"#007aff\"} name=\"arrow-down\" />}\n       style={{ width: undefined }}\n       placeholder=\"Select your Category\"\n       selectedValue={category}\n       placeholderStyle={{ color: \"#007aff\"}}\n       placeholderIconColor=\"#007aff\"\n       // onValueChange={(e) => [setPickerValue(e), setCategory(e)]}\n       onValueChange={(e) => setCategory(e)}\n\n   >\n       {categories.map((c) => {\nreturn <Picker.Item key={c.id} label={c.name} value={c.name} />;\n})}\n   </Picker>\n</Item> \n</View>\n           <Input \n            placeholder=\"storeName\"\n            name=\"storeName\"\n            id=\"storeName\"\n            value={storeName}\n            onChangeText={(text) => setstoreName(text)}\n           />\n           {/* <View style={styles.label}>\n               <Text style={{ textDecorationLine: \"underline\"}}>Nom</Text>\n           </View> */}\n           <Input \n            placeholder=\"Name\"\n            name=\"name\"\n            id=\"name\"\n            value={name}\n            onChangeText={(text) => setName(text)}\n           />\n            {/* <View style={styles.label}>\n               <Text style={{ textDecorationLine: \"underline\"}}>Prix</Text>\n           </View> */}\n\n           <View style={styles.options}>\n           <Inputt \n            placeholder=\"Price\"\n            name=\"price\"\n            id=\"price\"\n            value={price}\n            keyboardType={\"numeric\"}\n            onChangeText={(text) => setPrice(text)}\n           />\n           \n{/* \n           <View style={styles.label}>\n               <Text style={{ textDecorationLine: \"underline\"}}>Quantite en Stock</Text>\n           </View> */}\n           \n           <Inputt  \n            placeholder=\"Stock\"\n            name=\"stock\"\n            id=\"stock\"\n            value={countInStock}\n            keyboardType={\"numeric\"}\n            onChangeText={(text) => setCountInStock(text)}\n           />\n               </View>\n           \n           \n           \n      \n{/*        \n            <View style={styles.label}>\n               <Text style={{ textDecorationLine: \"underline\"}}>Description</Text>\n           </View> */}\n     \n     <View style={styles.options}>\n\n           <Inputt \n            placeholder=\"Description\"\n            name=\"description\"\n            id=\"description\"\n            value={description}\n            onChangeText={(text) => setDescription(text)}\n\n           />\n\n\n\n          <Inputt \n            placeholder=\"Description\"\n            name=\"description\"\n            id=\"description\"\n            value={description}\n            onChangeText={(text) => setDescription(text)}\n\n           />  \n        </View>\n    \n\n\n\n\n{/* <DropDownPicker\n        style={{ marginVertical: 10 }}\n        // selectedValue={{ selectedLanguage }}\n        placeholder=\"Select your Category\"\n        selectedValue={category}\n        placeholderStyle={{ color: \"#007aff\"}}\n        // placeholderIconColor=\"#007aff\"\n        // onValueChange={(e) => [setPickerValue(e), setCategory(e)]}\n        onValueChange={(e) => setCategory(e)}\n      >\n        {categories.map((c) => (\n          <Picker.Item  key={c.id} label={c.name} value={c.name} />\n        ))}\n    </DropDownPicker> */}\n\n\n\n\n<EasyButton\n            large\n            secondary\n            onPress={() => props.navigation.navigate(\"AddOption\")}\n          >\n            <Text style={{ color: \"white\" }}>AddOption</Text>\n          </EasyButton>\n\n             \n           {err ? <Error message={err} /> : null}\n           <View style={styles.buttonContainer}>\n               <EasyButton\n                large\n                primary\n                onPress={() => addProduct()}               \n               >\n                   <Text style={styles.buttonText}>Confirm</Text>\n               </EasyButton>\n           </View>\n           </FormContainer>     \n\n    \n    )\n}\n\nconst styles = StyleSheet.create({\n    label: {\n        width: \"80%\",\n        marginTop: 10\n    },\n    buttonContainer: {\n        width: \"80%\",\n        marginBottom: 80,\n        marginTop: 20,\n        alignItems: \"center\"\n    },\n    buttonText: {\n        color: \"white\"\n    },\n    imageContainer: {\n        width: 200,\n        height: 200,\n        borderStyle: \"solid\",\n        borderWidth: 8,\n        padding: 0,\n        justifyContent: \"center\",\n        borderRadius: 100,\n        borderColor: \"#E0E0E0\",\n        elevation: 10\n    },\n    image: {\n        width: \"100%\",\n        height: \"100%\",\n        borderRadius: 100\n    },\n    imagePicker: {\n        position: \"absolute\",\n        right: 5,\n        bottom: 5,\n        backgroundColor: \"grey\",\n        padding: 8,\n        borderRadius: 100,\n        elevation: 20\n    },\n\n    options:{\n        flexDirection: 'row',\n        // alignContent: 'space-around',\n        justifyContent: 'space-between',\n                // \"space-around\",   \"space-between\",\n\n\n\n\n    },\n    inputgauche:{\n        marginRight: 8,\n        },\n        \n        pic:{\n\n            width: '80%',\n            height: 50,\n                  borderRadius: 20,\n                  backgroundColor: 'white',\n                  margin: 10,\n                  borderRadius: 20,\n                  padding: 10,\n                  borderWidth: 2,\n                  borderColor: 'orange',\n                  justifyContent: 'center'},\n})\n\nexport default serviceForm;"]},"metadata":{},"sourceType":"module"}
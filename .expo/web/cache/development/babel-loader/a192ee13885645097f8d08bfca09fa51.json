{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"containerStyle\", \"maxLength\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar viewPropTypes = ViewPropTypes || View.propTypes;\n\nvar Textarea = function (_PureComponent) {\n  _inherits(Textarea, _PureComponent);\n\n  var _super = _createSuper(Textarea);\n\n  function Textarea(props) {\n    var _this;\n\n    _classCallCheck(this, Textarea);\n\n    _this = _super.call(this, props);\n\n    _this._onChangeText = function (text) {\n      var onChangeText = _this.props.onChangeText;\n\n      _this.setState({\n        count: text.length\n      });\n\n      if (onChangeText) onChangeText(text);\n    };\n\n    _this.state = {\n      count: +(!!props.defaultValue && props.defaultValue.length)\n    };\n    return _this;\n  }\n\n  _createClass(Textarea, [{\n    key: \"_renderCount\",\n    value: function _renderCount() {\n      var maxLength = this.props.maxLength;\n      var count = this.state.count;\n      if (!maxLength) return null;\n      return _jsx(Text, {\n        style: styles.count,\n        children: count + \"/\" + maxLength\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          containerStyle = _this$props.containerStyle,\n          maxLength = _this$props.maxLength,\n          rest = _objectWithoutProperties(_this$props, _excluded);\n\n      if (!!maxLength) {\n        rest.maxLength = maxLength;\n      }\n\n      return _jsxs(View, {\n        style: [styles.container, containerStyle],\n        children: [_jsx(TextInput, _objectSpread(_objectSpread({\n          multiline: true\n        }, rest), {}, {\n          onChangeText: this._onChangeText,\n          ref: \"textarea\"\n        })), this._renderCount()]\n      });\n    }\n  }]);\n\n  return Textarea;\n}(PureComponent);\n\nTextarea.defaultProps = {\n  maxLength: 0\n};\nexport { Textarea as default };\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    height: 170\n  },\n  count: {\n    position: 'absolute',\n    bottom: 8,\n    right: 2,\n    fontSize: 14,\n    color: '#ccc'\n  }\n});","map":{"version":3,"sources":["/home/theo/Bureau/react/QAM_U/client_Qam/node_modules/react-native-textarea/src/Textarea.js"],"names":["React","PureComponent","ViewPropTypes","viewPropTypes","View","propTypes","Textarea","props","_onChangeText","text","onChangeText","setState","count","length","state","defaultValue","maxLength","styles","containerStyle","rest","container","_renderCount","defaultProps","StyleSheet","create","width","height","position","bottom","right","fontSize","color"],"mappings":";;;;;;;;;;;;;;;;;AAKA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;;;;SAMEC,a;;;AAIF,IAAMC,aAAa,GAAGD,aAAa,IAAIE,IAAI,CAACC,SAA5C;;IAYqBC,Q;;;;;AAKnB,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAOnBC,aAPmB,GAOH,UAACC,IAAD,EAAU;AACxB,UAAQC,YAAR,GAA0B,MAAKH,KAA/B,CAAQG,YAAR;;AAEA,YAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEH,IAAI,CAACI;AAAd,OAAd;;AAEA,UAAIH,YAAJ,EAAkBA,YAAY,CAACD,IAAD,CAAZ;AACnB,KAbkB;;AAEjB,UAAKK,KAAL,GAAa;AACXF,MAAAA,KAAK,EAAE,EAAE,CAAC,CAACL,KAAK,CAACQ,YAAR,IAAwBR,KAAK,CAACQ,YAAN,CAAmBF,MAA7C;AADI,KAAb;AAFiB;AAKlB;;;;WAUD,wBAAe;AACb,UAAQG,SAAR,GAAuB,KAAKT,KAA5B,CAAQS,SAAR;AACA,UAAQJ,KAAR,GAAmB,KAAKE,KAAxB,CAAQF,KAAR;AAEA,UAAI,CAACI,SAAL,EAAgB,OAAO,IAAP;AAEhB,aACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACL,KAApB;AAAA,kBACMA,KADN,SACeI;AADf,QADF;AAKD;;;WAED,kBAAS;AACP,wBAA+C,KAAKT,KAApD;AAAA,UAAQW,cAAR,eAAQA,cAAR;AAAA,UAAwBF,SAAxB,eAAwBA,SAAxB;AAAA,UAAsCG,IAAtC;;AACA,UAAI,CAAC,CAACH,SAAN,EAAiB;AACfG,QAAAA,IAAI,CAACH,SAAL,GAAiBA,SAAjB;AACD;;AACD,aACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACC,MAAM,CAACG,SAAR,EAAmBF,cAAnB,CAAb;AAAA,mBACE,KAAC,SAAD;AAAW,UAAA,SAAS;AAApB,WAAyBC,IAAzB;AAA+B,UAAA,YAAY,EAAE,KAAKX,aAAlD;AAAiE,UAAA,GAAG,EAAC;AAArE,WADF,EAEG,KAAKa,YAAL,EAFH;AAAA,QADF;AAMD;;;;EA5CmCpB,a;;AAAjBK,Q,CACZgB,Y,GAAe;AACpBN,EAAAA,SAAS,EAAE;AADS,C;SADHV,Q;AA+CrB,IAAMW,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,KAAK,EAAE,MADE;AAETC,IAAAA,MAAM,EAAE;AAFC,GADoB;AAK/Bd,EAAAA,KAAK,EAAE;AACLe,IAAAA,QAAQ,EAAE,UADL;AAELC,IAAAA,MAAM,EAAE,CAFH;AAGLC,IAAAA,KAAK,EAAE,CAHF;AAILC,IAAAA,QAAQ,EAAE,EAJL;AAKLC,IAAAA,KAAK,EAAE;AALF;AALwB,CAAlB,CAAf","sourcesContent":["/**\n * Textarea\n * Created by xinlc on 20/03/2018.\n * @flow\n */\nimport React, { PureComponent } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TextInput,\n  ViewPropTypes,\n} from 'react-native';\n\n// Fallback when RN version is < 0.44\nconst viewPropTypes = ViewPropTypes || View.propTypes;\n\ntype Props = {\n  containerStyle?: viewPropTypes.style,\n  maxLength?: number,\n  onChangeText?: (text: string) => void,\n};\n\ntype State = {\n  count: number,\n};\n\nexport default class Textarea extends PureComponent<Props, State> {\n  static defaultProps = {\n    maxLength: 0,\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: +(!!props.defaultValue && props.defaultValue.length),\n    };\n  }\n\n  _onChangeText = (text) => {\n    const { onChangeText, } = this.props;\n\n    this.setState({ count: text.length });\n\n    if (onChangeText) onChangeText(text);\n  }\n\n  _renderCount() {\n    const { maxLength, } = this.props;\n    const { count, } = this.state;\n\n    if (!maxLength) return null;\n\n    return (\n      <Text style={styles.count}>\n        {`${count}/${maxLength}`}\n      </Text>\n    );\n  }\n\n  render() {\n    const { containerStyle, maxLength, ...rest } = this.props;\n    if (!!maxLength) {\n      rest.maxLength = maxLength;\n    }\n    return (\n      <View style={[styles.container, containerStyle]}>\n        <TextInput multiline {...rest} onChangeText={this._onChangeText} ref=\"textarea\" />\n        {this._renderCount()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    height: 170,\n  },\n  count: {\n    position: 'absolute',\n    bottom: 8,\n    right: 2,\n    fontSize: 14,\n    color: '#ccc',\n  }\n});\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Item } from \"react-native-web/dist/index\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport RNPickerSelect from \"react-native-picker-select\";\nimport FormContainer from \"../../Shared/Form/FormContainer\";\nimport Inputt from \"../../Shared/Form/Inputt\";\nimport Input from \"../../Shared/Form/Input\";\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\";\nimport Error from \"../../Shared/Error\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Toast from \"react-native-toast-message\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport baseURL from \"../../assets/common/baseUrl\";\nimport axios from \"axios\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport mime from \"mime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar serviceFormt = function serviceFormt(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      pickerValue = _useState2[0],\n      setPickerValue = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      storeName = _useState4[0],\n      setstoreName = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      price = _useState8[0],\n      setPrice = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      description = _useState10[0],\n      setDescription = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      image = _useState12[0],\n      setImage = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      mainImage = _useState14[0],\n      setMainImage = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      category = _useState16[0],\n      setCategory = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      categories = _useState18[0],\n      setCategories = _useState18[1];\n\n  var _useState19 = useState(),\n      _useState20 = _slicedToArray(_useState19, 2),\n      token = _useState20[0],\n      setToken = _useState20[1];\n\n  var _useState21 = useState(),\n      _useState22 = _slicedToArray(_useState21, 2),\n      err = _useState22[0],\n      setError = _useState22[1];\n\n  var _useState23 = useState(),\n      _useState24 = _slicedToArray(_useState23, 2),\n      countInStock = _useState24[0],\n      setCountInStock = _useState24[1];\n\n  var _useState25 = useState(0),\n      _useState26 = _slicedToArray(_useState25, 2),\n      adress = _useState26[0],\n      setAdress = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      isFeatured = _useState28[0],\n      setIsFeature = _useState28[1];\n\n  var _useState29 = useState(),\n      _useState30 = _slicedToArray(_useState29, 2),\n      richDescription = _useState30[0],\n      setRichDescription = _useState30[1];\n\n  var _useState31 = useState(0),\n      _useState32 = _slicedToArray(_useState31, 2),\n      numReviews = _useState32[0],\n      setNumReviews = _useState32[1];\n\n  var _useState33 = useState(null),\n      _useState34 = _slicedToArray(_useState33, 2),\n      item = _useState34[0],\n      setItem = _useState34[1];\n\n  var _useState35 = useState(null),\n      _useState36 = _slicedToArray(_useState35, 2),\n      service = _useState36[0],\n      setServices = _useState36[1];\n\n  var _useState37 = useState(\"C\"),\n      _useState38 = _slicedToArray(_useState37, 2),\n      selectedLanguage = _useState38[0],\n      setSelectedLanguage = _useState38[1];\n\n  var _useState39 = useState([\"C\", \"C++\", \"Golang\", \"Javascript\", \"Python\", \"Rust\", \"Java\", \"Typescript\"]),\n      _useState40 = _slicedToArray(_useState39, 2),\n      languages = _useState40[0],\n      setLanguages = _useState40[1];\n\n  useEffect(function () {\n    if (!props.route.params) {\n      setItem(null);\n    } else {\n      setItem(props.route.params.item);\n      setstoreName(props.route.params.item.storeName);\n      setName(props.route.params.item.name);\n      setPrice(props.route.params.item.price.toString());\n      setDescription(props.route.params.item.description);\n      setMainImage(props.route.params.item.image);\n      setImage(props.route.params.item.image);\n      setCategory(props.route.params.item.category._id);\n      setCountInStock(props.route.params.item.countInStock.toString());\n    }\n\n    AsyncStorage.getItem(\"jwt\").then(function (res) {\n      setToken(res);\n    }).catch(function (error) {\n      return console.log(error);\n    });\n    axios.get(baseURL + \"categories\").then(function (res) {\n      return setCategories(res.data);\n    }).catch(function (error) {\n      return alert(\"Error to load categories\");\n    });\n    axios.get(baseURL + \"services\").then(function (res) {\n      return setServices(res.data);\n    }).catch(function (error) {\n      return alert(\"Error to load Services\");\n    });\n\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== \"web\")) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== \"granted\") {\n                alert(\"Sorry, we need camera roll permissions to make this work!\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n\n    return function () {\n      setCategories([]);\n    };\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              setMainImage(result.uri);\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addProduct = function addProduct() {\n    if (name == \"\" || storeName == \"\" || price == \"\" || description == \"\" || category == \"\" || countInStock == \"\" || adress == \"\") {\n      setError(\"Please fill in the form correctly\");\n    }\n\n    var formData = new FormData();\n    var newImageUri = \"file:///\" + image.split(\"file:/\").join(\"\");\n    formData.append(\"image\", {\n      uri: newImageUri,\n      type: mime.getType(newImageUri),\n      name: newImageUri.split(\"/\").pop()\n    });\n    formData.append(\"name\", name);\n    formData.append(\"storeName\", storeName);\n    formData.append(\"price\", price);\n    formData.append(\"description\", description);\n    formData.append(\"category\", category);\n    formData.append(\"countInStock\", countInStock);\n    formData.append(\"richDescription\", richDescription);\n    formData.append(\"adress\", adress);\n    var config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: \"Bearer \" + token\n      }\n    };\n    axios.post(baseURL + \"products\", formData, config).then(function (res) {\n      if (res.status == 200 || res.status == 201) {\n        Toast.show({\n          topOffset: 60,\n          type: \"success\",\n          text1: \"New Product added\",\n          text2: \"\"\n        });\n        console.log(res.data);\n      }\n    }).catch(function (error) {\n      Toast.show({\n        topOffset: 60,\n        type: \"error\",\n        text1: \"Something went wrong\",\n        text2: \"Please try again\"\n      });\n    });\n  };\n\n  return _jsxs(FormContainer, {\n    title: \"Vos Services\",\n    children: [_jsxs(View, {\n      style: styles.imageContainer,\n      children: [_jsx(Image, {\n        style: styles.image,\n        source: {\n          uri: mainImage\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: pickImage,\n        style: styles.imagePicker,\n        children: _jsx(Icon, {\n          style: {\n            color: \"white\"\n          },\n          name: \"camera\"\n        })\n      })]\n    }), _jsx(Input, {\n      placeholder: \"store Name\",\n      name: \"storeName\",\n      id: \"storeName\",\n      value: storeName,\n      onChangeText: function onChangeText(text) {\n        return setstoreName(text);\n      }\n    }), _jsxs(View, {\n      style: styles.options,\n      children: [_jsx(Inputt, {\n        placeholder: \"service name\",\n        name: \"stock\",\n        id: \"stock\",\n        value: countInStock,\n        onChangeText: function onChangeText(text) {\n          return setCountInStock(text);\n        }\n      }), _jsx(Inputt, {\n        placeholder: \"Price\",\n        name: \"price\",\n        id: \"price\",\n        value: price,\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(text) {\n          return setPrice(text);\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.options,\n      children: [_jsx(Inputt, {\n        placeholder: \"Description\",\n        name: \"description\",\n        id: \"description\",\n        value: description,\n        onChangeText: function onChangeText(text) {\n          return setDescription(text);\n        }\n      }), _jsx(Inputt, {\n        placeholder: \"Options\",\n        name: \"description\",\n        id: \"description\",\n        value: description,\n        onChangeText: function onChangeText(text) {\n          return setDescription(text);\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        children: \"Hello World!\"\n      }), _jsx(RNPickerSelect, {\n        onValueChange: function onValueChange(value) {\n          return console.log(value);\n        },\n        useNativeAndroidPickerStyle: false,\n        placeholder: {\n          label: \"Select your favourite language\",\n          value: null\n        },\n        items: [{\n          label: \"JavaScript\",\n          value: \"JavaScript\"\n        }, {\n          label: \"TypeScript\",\n          value: \"TypeScript\"\n        }, {\n          label: \"Python\",\n          value: \"Python\"\n        }, {\n          label: \"Java\",\n          value: \"Java\"\n        }, {\n          label: \"C++\",\n          value: \"C++\"\n        }, {\n          label: \"C\",\n          value: \"C\"\n        }]\n      })]\n    }), categories !== [] && _jsx(Picker, {\n      mode: \"dropdown\",\n      iosIcon: _jsx(Icon, {\n        color: \"#007aff\",\n        name: \"arrow-down\"\n      }),\n      style: {\n        width: undefined\n      },\n      placeholder: \"Select your Category\",\n      selectedValue: pickerValue,\n      placeholderStyle: {\n        color: \"#007aff\"\n      },\n      placeholderIconColor: \"#007aff\",\n      onValueChange: function onValueChange(e) {\n        return [setPickerValue(e), setCategory(e)];\n      },\n      children: categories.map(function (c) {\n        return _jsx(Picker.Item, {\n          label: c.name,\n          value: c._id\n        }, c._id);\n      })\n    }), err ? _jsx(Error, {\n      message: err\n    }) : null, _jsx(View, {\n      style: styles.buttonContainer,\n      children: _jsxs(View, {\n        style: styles.options,\n        children: [_jsx(EasyButton, {\n          large: true,\n          secondary: true,\n          onPress: function onPress() {\n            return props.navigation.navigate(\"Login\");\n          },\n          children: _jsx(Text, {\n            style: {\n              color: \"white\"\n            },\n            children: \"Back to Login\"\n          })\n        }), _jsx(EasyButton, {\n          large: true,\n          secondary: true,\n          onPress: function onPress() {\n            return props.navigation.navigate(\"ImageScreen\");\n          },\n          children: _jsx(Text, {\n            style: {\n              color: \"white\"\n            },\n            children: \" Theo Search\"\n          })\n        }), _jsx(EasyButton, {\n          large: true,\n          primary: true,\n          onPress: function onPress() {\n            return addProduct();\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Confirm\"\n          })\n        })]\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  label: {\n    width: \"80%\",\n    marginTop: 10\n  },\n  buttonContainer: {\n    width: \"80%\",\n    marginBottom: 80,\n    marginTop: 20,\n    alignItems: \"center\"\n  },\n  buttonText: {\n    color: \"white\"\n  },\n  imageContainer: {\n    width: 200,\n    height: 200,\n    borderStyle: \"solid\",\n    borderWidth: 8,\n    padding: 0,\n    justifyContent: \"center\",\n    borderRadius: 100,\n    borderColor: \"#E0E0E0\",\n    elevation: 10\n  },\n  image: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 100\n  },\n  imagePicker: {\n    position: \"absolute\",\n    right: 5,\n    bottom: 5,\n    backgroundColor: \"grey\",\n    padding: 8,\n    borderRadius: 100,\n    elevation: 20\n  },\n  options: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  inputgauche: {\n    marginRight: 8\n  }\n});\nexport default serviceFormt;","map":{"version":3,"sources":["/home/theo/Bureau/react/QAM_U/client_Qam/Screens/User/serviceFormt.js"],"names":["React","useState","useEffect","Item","DropDownPicker","RNPickerSelect","FormContainer","Inputt","Input","EasyButton","Error","Icon","Toast","AsyncStorage","baseURL","axios","ImagePicker","mime","serviceFormt","props","pickerValue","setPickerValue","storeName","setstoreName","name","setName","price","setPrice","description","setDescription","image","setImage","mainImage","setMainImage","category","setCategory","categories","setCategories","token","setToken","err","setError","countInStock","setCountInStock","adress","setAdress","isFeatured","setIsFeature","richDescription","setRichDescription","numReviews","setNumReviews","item","setItem","service","setServices","selectedLanguage","setSelectedLanguage","languages","setLanguages","route","params","toString","_id","getItem","then","res","catch","error","console","log","get","data","alert","Platform","OS","requestCameraPermissionsAsync","status","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uri","addProduct","formData","FormData","newImageUri","split","join","append","type","getType","pop","config","headers","Authorization","post","show","topOffset","text1","text2","styles","imageContainer","imagePicker","color","text","options","container","value","label","width","undefined","e","map","c","buttonContainer","navigation","navigate","buttonText","StyleSheet","create","marginTop","marginBottom","alignItems","height","borderStyle","borderWidth","padding","justifyContent","borderRadius","borderColor","elevation","position","right","bottom","backgroundColor","flexDirection","inputgauche","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  TouchableOpacity,\n  Platform,\n} from \"react-native\";\nimport { Item, Picker } from \"react-native\";\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport RNPickerSelect from \"react-native-picker-select\";\n\n\n\nimport FormContainer from \"../../Shared/Form/FormContainer\";\nimport Inputt from \"../../Shared/Form/Inputt\";\nimport Input from \"../../Shared/Form/Input\";\n\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\";\nimport Error from \"../../Shared/Error\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport Toast from \"react-native-toast-message\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport baseURL from \"../../assets/common/baseUrl\";\nimport axios from \"axios\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport mime from \"mime\";\n// const countries = require(\"../../assets/countries.json\");\n\nconst serviceFormt = (props) => {\n  const [pickerValue, setPickerValue] = useState();\n  const [storeName, setstoreName] = useState();\n  const [name, setName] = useState();\n  const [price, setPrice] = useState();\n  const [description, setDescription] = useState();\n  const [image, setImage] = useState();\n  const [mainImage, setMainImage] = useState();\n  const [category, setCategory] = useState();\n  const [categories, setCategories] = useState([]);\n  const [token, setToken] = useState();\n  const [err, setError] = useState();\n  const [countInStock, setCountInStock] = useState();\n  const [adress, setAdress] = useState(0);\n  const [isFeatured, setIsFeature] = useState(false);\n  const [richDescription, setRichDescription] = useState();\n  const [numReviews, setNumReviews] = useState(0);\n  const [item, setItem] = useState(null);\n  const [service, setServices] = useState(null);\n\n  const [selectedLanguage, setSelectedLanguage] = useState(\"C\");\n  const [languages, setLanguages] = useState([\n    \"C\",\n    \"C++\",\n    \"Golang\",\n    \"Javascript\",\n    \"Python\",\n    \"Rust\",\n    \"Java\",\n    \"Typescript\",\n  ]);\n\n  // {\n\n  //     this.state = {\n\n  //     isLoading: true,\n\n  //     PickerValueHolder : ''\n\n  //    }\n  //   }s\n\n  useEffect(() => {\n    if (!props.route.params) {\n      setItem(null);\n    } else {\n      setItem(props.route.params.item);\n      setstoreName(props.route.params.item.storeName);\n      setName(props.route.params.item.name);\n      setPrice(props.route.params.item.price.toString());\n      setDescription(props.route.params.item.description);\n      setMainImage(props.route.params.item.image);\n      setImage(props.route.params.item.image);\n      setCategory(props.route.params.item.category._id);\n      setCountInStock(props.route.params.item.countInStock.toString());\n    }\n\n    AsyncStorage.getItem(\"jwt\")\n      .then((res) => {\n        setToken(res);\n      })\n      .catch((error) => console.log(error));\n\n    // Categories\n    axios\n      .get(`${baseURL}categories`)\n      .then((res) => setCategories(res.data))\n\n      .catch((error) => alert(\"Error to load categories\"));\n\n    axios\n      .get(`${baseURL}services`)\n      .then((res) => setServices(res.data))\n\n      .catch((error) => alert(\"Error to load Services\"));\n\n    (async () => {\n      if (Platform.OS !== \"web\") {\n        const { status } = await ImagePicker.requestCameraPermissionsAsync();\n        if (status !== \"granted\") {\n          alert(\"Sorry, we need camera roll permissions to make this work!\");\n        }\n      }\n    })();\n\n    return () => {\n      setCategories([]);\n    };\n  }, []);\n\n  const pickImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    if (!result.cancelled) {\n      setMainImage(result.uri);\n      setImage(result.uri);\n    }\n  };\n\n  const addProduct = () => {\n    if (\n      name == \"\" ||\n      storeName == \"\" ||\n      price == \"\" ||\n      description == \"\" ||\n      category == \"\" ||\n      countInStock == \"\" ||\n      adress == \"\"\n    ) {\n      setError(\"Please fill in the form correctly\");\n    }\n\n    let formData = new FormData();\n    const newImageUri = \"file:///\" + image.split(\"file:/\").join(\"\");\n\n    formData.append(\"image\", {\n      uri: newImageUri,\n      type: mime.getType(newImageUri),\n      name: newImageUri.split(\"/\").pop(),\n    });\n    formData.append(\"name\", name);\n    formData.append(\"storeName\", storeName);\n    formData.append(\"price\", price);\n    formData.append(\"description\", description);\n    formData.append(\"category\", category);\n    formData.append(\"countInStock\", countInStock);\n    formData.append(\"richDescription\", richDescription);\n    formData.append(\"adress\", adress);\n    // formData.append(\"numReviews\", numReviews);\n    // formData.append(\"isFeatured\", isFeatured);\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    // if(item !== null) {\n    //     axios\n    //     .put(`${baseURL}products/${item.id}`, formData, config)\n    //     .then((res) => {\n    //         if(res.status == 200 || res.status == 201) {\n    //             Toast.show({\n    //                 topOffset: 60,\n    //                 type: \"success\",\n    //                 text1: \"Product successfuly updated\",\n    //                 text2: \"\"\n    //             });\n    //             setTimeout(() => {\n    //                 props.navigation.navigate(\"Products\");\n    //             }, 500)\n    //         }\n    //     })\n    //     .catch((error) => {\n    //         Toast.show({\n    //             topOffset: 60,\n    //                 type: \"error\",\n    //                 text1: \"Something went wrong\",\n    //                 text2: \"Please try again\"\n    //         })\n    //     })\n    // } else {\n    axios\n      .post(`${baseURL}products`, formData, config)\n      .then((res) => {\n        if (res.status == 200 || res.status == 201) {\n          Toast.show({\n            topOffset: 60,\n            type: \"success\",\n            text1: \"New Product added\",\n            text2: \"\",\n          });\n          // setTimeout(() => {\n          //     console.log(res.data);\n          //     props.navigation.navigate(\"Products\");\n          // }, 500);\n          console.log(res.data);\n        }\n      })\n      .catch((error) => {\n        Toast.show({\n          topOffset: 60,\n          type: \"error\",\n          text1: \"Something went wrong\",\n          text2: \"Please try again\",\n        });\n      });\n    // }\n  };\n\n  return (\n    <FormContainer title=\"Vos Services\">\n      <View style={styles.imageContainer}>\n        <Image style={styles.image} source={{ uri: mainImage }} />\n        <TouchableOpacity onPress={pickImage} style={styles.imagePicker}>\n          <Icon style={{ color: \"white\" }} name=\"camera\" />\n        </TouchableOpacity>\n      </View>\n      {/* <View style={styles.label}>\n               <Text style={{ textDecorationLine: \"underline\"}}>Marques</Text>\n           </View> */}\n      <Input\n        placeholder=\"store Name\"\n        name=\"storeName\"\n        id=\"storeName\"\n        value={storeName}\n        onChangeText={(text) => setstoreName(text)}\n      />\n      {/* <View style={styles.label}>\n               <Text style={{ textDecorationLine: \"underline\"}}>Nom</Text>\n\n           </View> */}\n      {/* <Input \n            placeholder=\"Name\"\n            name=\"name\"\n            id=\"name\"\n            value={name}\n            onChangeText={(text) => setName(text)}\n           /> */}\n      {/* <View style={styles.label}>\n               <Text style={{ textDecorationLine: \"underline\"}}>Prix</Text>\n           </View> */}\n\n      {/* <Item picker  style={{\n            borderColor: 'transparent', \n            justifyContent:\"center\", \n            alignSelf:\"center\",\n            width: \"80%\",\n            marginTop: 6\n            }}> */}\n      {/* <Picker\n                        mode=\"dropdown\"\n                        iosIcon={<Icon name=\"arrow-down\" color={\"#007aff\"} />}\n                        style={{ width: undefined }}\n                        placeholder=\"Select your job\"\n                        // selectedValue={category}\n                     \n                        placeholderStyle={{ color: '#007aff' }}\n                        placeholderIconColor=\"#007aff\"\n                        onValueChange={(itemVal) => {setCategories(itemVal);\n                        }}\n                    >\n                        {categories.map((c) => {\n                           <Picker.Item \n                                    key={c.code} \n                                    label={c.name}\n                                    value={c.name}\n                                    />\n                        })}\n                    </Picker> */}\n      {/* </Item> */}\n{/* \n      <DropDownPicker\n        style={{ marginVertical: 10 }}\n        selectedValue={{ selectedLanguage }}\n        onValueChange={(itemVal) => {\n          setCategories([]); // <-- this line of code will changes the second picker items\n          setSelectedLanguage(itemVal);\n        }}\n      >\n        {categories.map((c) => (\n          <Picker.Item label={c} value={c} />\n        ))}\n    </DropDownPicker> */}\n\n      <View style={styles.options}>\n        {/* \n           <View style={styles.label}>\n               <Text style={{ textDecorationLine: \"underline\"}}>Quantite en Stock</Text>\n           </View> */}\n\n        <Inputt\n          placeholder=\"service name\"\n          name=\"stock\"\n          id=\"stock\"\n          value={countInStock}\n          // keyboardType={\"numeric\"}\n          onChangeText={(text) => setCountInStock(text)}\n        />\n\n        <Inputt\n          placeholder=\"Price\"\n          name=\"price\"\n          id=\"price\"\n          value={price}\n          keyboardType={\"numeric\"}\n          onChangeText={(text) => setPrice(text)}\n        />\n      </View>\n\n      {/*        \n            <View style={styles.label}>\n               <Text style={{ textDecorationLine: \"underline\"}}>Description</Text>\n           </View> */}\n\n      <View style={styles.options}>\n        <Inputt\n          placeholder=\"Description\"\n          name=\"description\"\n          id=\"description\"\n          value={description}\n          onChangeText={(text) => setDescription(text)}\n        />\n\n        <Inputt\n          placeholder=\"Options\"\n          name=\"description\"\n          id=\"description\"\n          value={description}\n          onChangeText={(text) => setDescription(text)}\n        />\n      </View>\n\n      <View style={styles.container}>\n  <Text>Hello World!</Text>\n  <RNPickerSelect\n      onValueChange={(value) => console.log(value)}\n      useNativeAndroidPickerStyle={false}\n      placeholder={{ label: \"Select your favourite language\", value: null }}\n      items={[\n          { label: \"JavaScript\", value: \"JavaScript\" },\n          { label: \"TypeScript\", value: \"TypeScript\" },\n          { label: \"Python\", value: \"Python\" },\n          { label: \"Java\", value: \"Java\" },\n          { label: \"C++\", value: \"C++\" },\n          { label: \"C\", value: \"C\" },\n      ]}\n  />\n</View>\n      {categories !== [] && (\n        <Picker\n          mode=\"dropdown\"\n          iosIcon={<Icon color={\"#007aff\"} name=\"arrow-down\" />}\n          style={{ width: undefined }}\n          placeholder=\"Select your Category\"\n          selectedValue={pickerValue}\n          placeholderStyle={{ color: \"#007aff\" }}\n          placeholderIconColor=\"#007aff\"\n          onValueChange={(e) => [setPickerValue(e), setCategory(e)]}\n        >\n          {categories.map((c) => {\n            return <Picker.Item key={c._id} label={c.name} value={c._id} />;\n          })}\n        </Picker>\n      )}\n\n      {err ? <Error message={err} /> : null}\n      <View style={styles.buttonContainer}>\n        <View style={styles.options}>\n          <EasyButton\n            large\n            secondary\n            onPress={() => props.navigation.navigate(\"Login\")}\n          >\n            <Text style={{ color: \"white\" }}>Back to Login</Text>\n          </EasyButton>\n          <EasyButton\n            large\n            secondary\n            onPress={() => props.navigation.navigate(\"ImageScreen\")}\n          >\n            <Text style={{ color: \"white\" }}> Theo Search</Text>\n          </EasyButton>\n          <EasyButton large primary onPress={() => addProduct()}>\n            <Text style={styles.buttonText}>Confirm</Text>\n          </EasyButton>\n        </View>\n      </View>\n    </FormContainer>\n  );\n};\n\nconst styles = StyleSheet.create({\n  label: {\n    width: \"80%\",\n    marginTop: 10,\n  },\n  buttonContainer: {\n    width: \"80%\",\n    marginBottom: 80,\n    marginTop: 20,\n    alignItems: \"center\",\n  },\n  buttonText: {\n    color: \"white\",\n  },\n  imageContainer: {\n    width: 200,\n    height: 200,\n    borderStyle: \"solid\",\n    borderWidth: 8,\n    padding: 0,\n    justifyContent: \"center\",\n    borderRadius: 100,\n    borderColor: \"#E0E0E0\",\n    elevation: 10,\n  },\n  image: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 100,\n  },\n  imagePicker: {\n    position: \"absolute\",\n    right: 5,\n    bottom: 5,\n    backgroundColor: \"grey\",\n    padding: 8,\n    borderRadius: 100,\n    elevation: 20,\n  },\n\n  options: {\n    flexDirection: \"row\",\n    // alignContent: 'space-around',\n    justifyContent: \"space-between\",\n    // \"space-around\",   \"space-between\",\n  },\n  inputgauche: {\n    marginRight: 8,\n  },\n\n\n  \n});\n\nexport default serviceFormt;\n"]},"metadata":{},"sourceType":"module"}
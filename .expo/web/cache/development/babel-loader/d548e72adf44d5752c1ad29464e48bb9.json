{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SearchableDropdown from 'react-native-searchable-dropdown';\nvar items = [{\n  id: 1,\n  name: 'angellist'\n}, {\n  id: 2,\n  name: 'codepen'\n}, {\n  id: 3,\n  name: 'envelope'\n}, {\n  id: 4,\n  name: 'etsy'\n}, {\n  id: 5,\n  name: 'facebook'\n}, {\n  id: 6,\n  name: 'foursquare'\n}, {\n  id: 7,\n  name: 'github-alt'\n}, {\n  id: 8,\n  name: 'github'\n}, {\n  id: 9,\n  name: 'gitlab'\n}, {\n  id: 10,\n  name: 'instagram'\n}];\nimport FormContainer from \"../../Shared/Form/FormContainer\";\nimport Inputt from \"../../Shared/Form/Inputt\";\nimport Input from \"../../Shared/Form/Input\";\nimport baseURL from \"../../assets/common/baseUrl\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar countries = require(\"../../assets/countries.json\");\n\nvar Search = function Search(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      serverData = _useState2[0],\n      setServerData = _useState2[1];\n\n  useEffect(function () {\n    fetch('https://aboutreact.herokuapp.com/demosearchables.php').then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setServerData(responseJson.results);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }, []);\n  return _jsx(FormContainer, {\n    title: \"Vos Services\",\n    children: _jsx(SafeAreaView, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          style: styles.titleText,\n          children: \"Example of Searchable Dropdown / Picker in React Native\"\n        }), _jsx(Text, {\n          style: styles.headingText,\n          children: \"Searchable Dropdown from Static Array\"\n        }), _jsx(SearchableDropdown, {\n          onTextChange: function onTextChange(text) {\n            return console.log(text);\n          },\n          onItemSelect: function onItemSelect(item) {\n            return alert(JSON.stringify(item));\n          },\n          containerStyle: {\n            padding: 5\n          },\n          textInputStyle: {\n            padding: 12,\n            borderWidth: 1,\n            borderColor: '#ccc',\n            backgroundColor: '#FAF7F6'\n          },\n          itemStyle: {\n            padding: 10,\n            marginTop: 2,\n            backgroundColor: '#FAF9F8',\n            borderColor: '#bbb',\n            borderWidth: 1\n          },\n          itemTextStyle: {\n            color: '#222'\n          },\n          itemsContainerStyle: {\n            maxHeight: '60%'\n          },\n          items: items,\n          defaultIndex: 2,\n          placeholder: \"placeholder\",\n          resPtValue: false,\n          underlineColorAndroid: \"transparent\"\n        }), _jsx(Text, {\n          style: styles.headingText,\n          children: \"Searchable Dropdown from Dynamic Array from Server\"\n        }), _jsx(SearchableDropdown, {\n          onTextChange: function onTextChange(text) {\n            return console.log(text);\n          },\n          onItemSelect: function onItemSelect(item) {\n            return alert(JSON.stringify(item));\n          },\n          containerStyle: {\n            padding: 5\n          },\n          textInputStyle: {\n            padding: 12,\n            borderWidth: 1,\n            borderColor: '#ccc',\n            backgroundColor: '#FAF7F6'\n          },\n          itemStyle: {\n            padding: 10,\n            marginTop: 2,\n            backgroundColor: '#FAF9F8',\n            borderColor: '#bbb',\n            borderWidth: 1\n          },\n          itemTextStyle: {\n            color: '#222'\n          },\n          itemsContainerStyle: {\n            maxHeight: '50%'\n          },\n          items: serverData,\n          defaultIndex: 2,\n          placeholder: \"placeholder\",\n          resetValue: false,\n          underlineColorAndroid: \"transparent\"\n        })]\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    padding: 10\n  },\n  titleText: {\n    padding: 8,\n    fontSize: 16,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  headingText: {\n    padding: 8\n  }\n});\nexport default Search;","map":{"version":3,"sources":["/home/theo/Bureau/react/QAM_U/client_Qam/Screens/User/Search.js"],"names":["React","useState","useEffect","SearchableDropdown","items","id","name","FormContainer","Inputt","Input","baseURL","axios","countries","require","Search","props","serverData","setServerData","fetch","then","response","json","responseJson","results","catch","error","console","styles","container","titleText","headingText","text","log","item","alert","JSON","stringify","padding","borderWidth","borderColor","backgroundColor","marginTop","color","maxHeight","StyleSheet","create","flex","fontSize","textAlign","fontWeight"],"mappings":"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","sourcesContent":["// import React in our code\nimport React, {useState, useEffect} from 'react';\n\n// import all the components we are going to use\nimport {SafeAreaView, StyleSheet, Text, View} from 'react-native';\n\n// import SearchableDropdown component\nimport SearchableDropdown from 'react-native-searchable-dropdown';\n\n// Item array for the dropdown\nconst items = [\n  // name key is must. It is to show the text in front\n  {id: 1, name: 'angellist'},\n  {id: 2, name: 'codepen'},\n  {id: 3, name: 'envelope'},\n  {id: 4, name: 'etsy'},\n  {id: 5, name: 'facebook'},\n  {id: 6, name: 'foursquare'},\n  {id: 7, name: 'github-alt'},\n  {id: 8, name: 'github'},\n  {id: 9, name: 'gitlab'},\n  {id: 10, name: 'instagram'},\n];\n\nimport FormContainer from \"../../Shared/Form/FormContainer\";\nimport Inputt from \"../../Shared/Form/Inputt\";\nimport Input from \"../../Shared/Form/Input\";\n\n\nimport baseURL from \"../../assets/common/baseUrl\";\nimport axios from \"axios\";\n\n const countries = require(\"../../assets/countries.json\");\n\n\nconst Search = (props) => {\n\n    const [serverData, setServerData] = useState([]);\n\n    useEffect(() => {\n      fetch('https://aboutreact.herokuapp.com/demosearchables.php')\n        .then((response) => response.json())\n        .then((responseJson) => {\n          //Successful response from the API Call\n          setServerData(responseJson.results);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }, []);\n  \n  return (\n    <FormContainer title=\"Vos Services\">\n        \n        <SafeAreaView style={styles.container}>\n      <View style={styles.container}>\n        <Text style={styles.titleText}>\n          Example of Searchable Dropdown / Picker in React Native\n        </Text>\n        <Text style={styles.headingText}>\n          Searchable Dropdown from Static Array\n        </Text>\n        <SearchableDropdown\n          onTextChange={(text) => console.log(text)}\n          // Listner on the searchable input\n          onItemSelect={(item) => alert(JSON.stringify(item))}\n          // Called after the selection\n          containerStyle={{padding: 5}}\n          // Suggestion container style\n          textInputStyle={{\n            // Inserted text style\n            padding: 12,\n            borderWidth: 1,\n            borderColor: '#ccc',\n            backgroundColor: '#FAF7F6',\n          }}\n          itemStyle={{\n            // Single dropdown item style\n            padding: 10,\n            marginTop: 2,\n            backgroundColor: '#FAF9F8',\n            borderColor: '#bbb',\n            borderWidth: 1,\n          }}\n          itemTextStyle={{\n            // Text style of a single dropdown item\n            color: '#222',\n          }}\n          itemsContainerStyle={{\n            // Items container style you can pass maxHeight\n            // To restrict the items dropdown hieght\n            maxHeight: '60%',\n          }}\n          items={items}\n          // Mapping of item array\n          defaultIndex={2}\n          // Default selected item index\n          placeholder=\"placeholder\"\n          // place holder for the search input\n          resPtValue={false}\n          // Reset textInput Value with true and false state\n          underlineColorAndroid=\"transparent\"\n          // To remove the underline from the android input\n        />\n        <Text style={styles.headingText}>\n          Searchable Dropdown from Dynamic Array from Server\n        </Text>\n        <SearchableDropdown\n          onTextChange={(text) => console.log(text)}\n          // Change listner on the searchable input\n          onItemSelect={(item) => alert(JSON.stringify(item))}\n          // Called after the selection from the dropdown\n          containerStyle={{padding: 5}}\n          // Suggestion container style\n          textInputStyle={{\n            // Inserted text style\n            padding: 12,\n            borderWidth: 1,\n            borderColor: '#ccc',\n            backgroundColor: '#FAF7F6',\n          }}\n          itemStyle={{\n            // Single dropdown item style\n            padding: 10,\n            marginTop: 2,\n            backgroundColor: '#FAF9F8',\n            borderColor: '#bbb',\n            borderWidth: 1,\n          }}\n          itemTextStyle={{\n            // Text style of a single dropdown item\n            color: '#222',\n          }}\n          itemsContainerStyle={{\n            // Items container style you can pass maxHeight\n            // To restrict the items dropdown hieght\n            maxHeight: '50%',\n          }}\n          items={serverData}\n          // Mapping of item array\n          defaultIndex={2}\n          // Default selected item index\n          placeholder=\"placeholder\"\n          // Place holder for the search input\n          resetValue={false}\n          // Reset textInput Value with true and false state\n          underlineColorAndroid=\"transparent\"\n          // To remove the underline from the android input\n        />\n      </View>\n    </SafeAreaView>\n    </FormContainer>\n  );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: 'white',\n      padding: 10,\n    },\n    titleText: {\n      padding: 8,\n      fontSize: 16,\n      textAlign: 'center',\n      fontWeight: 'bold',\n    },\n    headingText: {\n      padding: 8,\n    },\n  });\n  export default Search;\n"]},"metadata":{},"sourceType":"module"}
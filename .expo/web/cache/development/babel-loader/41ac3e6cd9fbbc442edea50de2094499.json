{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { ProgressBarAndroid } from \"react-native-web/dist/index\";\nimport { Progress } from 'native-base';\nimport FormContainer from \"../../Shared/Form/FormContainer\";\nimport Input from \"../../Shared/Form/Input\";\nimport Error from \"../../Shared/Error\";\nimport Toast from \"react-native-toast-message\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from \"axios\";\nimport baseURL from \"../../assets/common/baseUrl\";\nimport Textarea from 'react-native-textarea';\nimport { Item, Picker } from 'native-base';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\n\nvar countries = require(\"../../assets/countries.json\");\n\nvar city = require(\"../../assets/city.json\");\n\nimport { isValidEmail, isValidObjField, updateError } from \"../../assets/methods\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar validationSchema = Yup.object({\n  name: Yup.string().trim().min(3, 'Invalid name!').required('Name is required!'),\n  email: Yup.string().email('Invalid email!').required('Email is required!'),\n  password: Yup.string().trim().min(8, 'Password is too short!').required('Password is required!'),\n  confirmPassword: Yup.string().equals([Yup.ref('password'), null], 'Password does not match!')\n});\n\nvar AddOption = function AddOption(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      description = _useState2[0],\n      setDescription = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      price = _useState4[0],\n      setPrice = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      category = _useState6[0],\n      setCategory = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      categories = _useState8[0],\n      setCategories = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      error = _useState10[0],\n      setError = _useState10[1];\n\n  useEffect(function () {\n    AsyncStorage.getItem(\"jwt\").then(function (res) {\n      setToken(res);\n    }).catch(function (error) {\n      return console.log(error);\n    });\n    axios.get(baseURL + \"options/AllOptions\").then(function (res) {\n      return setCategories(res.data);\n    }).catch(function (error) {\n      return alert(\"Error to load categories\");\n    });\n\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== \"web\")) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== \"granted\") {\n                alert(\"Sorry, we need camera roll permissions to make this work!\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n\n    return function () {\n      setCategories([]);\n      console.log(categories.length);\n    };\n  }, []);\n\n  var register = function register() {\n    if (description === \"\" || price === \"\") {\n      setError(\"Please fill in the form correctly\");\n    }\n\n    var user = {\n      description: description,\n      price: price\n    };\n    axios.post(baseURL + \"options/InsertOPtions\", user).then(function (res) {\n      if (res.status == 200) {\n        Toast.show({\n          topOffset: 60,\n          type: \"success\",\n          text1: \"Registration Succeeded\",\n          text2: \"Please Login into your account\"\n        });\n        setTimeout(function () {\n          props.navigation.navigate(\"AddOption\");\n        }, 500);\n      }\n    }).catch(function (error) {\n      Toast.show({\n        topOffset: 60,\n        type: \"error\",\n        text1: \"Something went wrong\",\n        text2: \"Please try again\"\n      });\n    });\n  };\n\n  return _jsx(KeyboardAwareScrollView, {\n    viewIsInsideTabBar: true,\n    extraHeight: 200,\n    enableOnAndroid: true,\n    children: _jsxs(FormContainer, {\n      title: \"ADD Options\",\n      children: [_jsxs(View, {\n        style: styles.example,\n        children: [_jsx(Text, {\n          children: \"  1/2\"\n        }), _jsx(ProgressBarAndroid, {\n          size: \"sm\",\n          mb: 4,\n          styleAttr: \"Horizontal\",\n          indeterminate: false,\n          progress: 0.5\n        })]\n      }), _jsx(View, {\n        style: styles.pic,\n        children: _jsx(Item, {\n          picker: true,\n          children: _jsx(Picker, {\n            mode: \"dropdown\",\n            iosIcon: _jsx(Icon, {\n              color: \"#007aff\",\n              name: \"arrow-down\"\n            }),\n            style: {\n              width: undefined\n            },\n            placeholder: \"Select your Category\",\n            selectedValue: category,\n            placeholderStyle: {\n              color: \"#007aff\"\n            },\n            placeholderIconColor: \"#007aff\",\n            onValueChange: function onValueChange(e) {\n              return setCategory(e);\n            },\n            children: categories.map(function (c) {\n              return _jsx(Picker.Item, {\n                label: c.name,\n                value: c.name\n              }, c.id);\n            })\n          })\n        })\n      }), _jsx(Input, {\n        placeholder: \"price\",\n        name: \"price\",\n        id: \"price\",\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(text) {\n          return setPrice(text);\n        }\n      }), _jsx(View, {\n        style: styles.container,\n        children: _jsx(Textarea, {\n          containerStyle: styles.textareaContainer,\n          style: styles.textarea,\n          name: \"description\",\n          id: \"description\",\n          onChangeText: function onChangeText(text) {\n            return setDescription(text);\n          },\n          maxLength: 120,\n          placeholder: 'Enter the Description of options',\n          placeholderTextColor: '#c7c7c7',\n          underlineColorAndroid: 'transparent'\n        })\n      }), _jsx(View, {\n        style: styles.buttonGroup,\n        children: error ? _jsx(Error, {\n          message: error\n        }) : null\n      }), _jsxs(View, {\n        style: styles.options,\n        children: [_jsx(EasyButton, {\n          large: true,\n          secondary: true,\n          onPress: function onPress() {\n            return props.navigation.navigate(\"serviceForm\");\n          },\n          children: _jsx(Text, {\n            style: {\n              color: \"white\"\n            },\n            children: \"Vos services\"\n          })\n        }), _jsx(EasyButton, {\n          large: true,\n          primary: true,\n          onPress: function onPress() {\n            return register();\n          },\n          children: _jsx(Text, {\n            style: {\n              color: \"white\"\n            },\n            children: \"Register\"\n          })\n        })]\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 30,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  textareaContainer: {\n    height: 180,\n    padding: 5,\n    backgroundColor: '#F5FCFF'\n  },\n  textarea: {\n    textAlignVertical: 'top',\n    height: 170,\n    fontSize: 14,\n    color: '#333'\n  },\n  pic: {\n    width: '80%',\n    height: 50,\n    borderRadius: 20,\n    backgroundColor: 'white',\n    margin: 10,\n    borderRadius: 20,\n    padding: 10,\n    borderWidth: 2,\n    borderColor: 'orange',\n    justifyContent: 'center'\n  }\n});\nexport default AddOption;","map":{"version":3,"sources":["/home/theo/Bureau/react/QAM_U/client_Qam/Screens/User/AddOption.js"],"names":["React","useState","ProgressBarAndroid","Progress","FormContainer","Input","Error","Toast","KeyboardAwareScrollView","EasyButton","Formik","Yup","axios","baseURL","Textarea","Item","Picker","Icon","countries","require","city","isValidEmail","isValidObjField","updateError","validationSchema","object","name","string","trim","min","required","email","password","confirmPassword","equals","ref","AddOption","props","description","setDescription","price","setPrice","category","setCategory","categories","setCategories","error","setError","useEffect","AsyncStorage","getItem","then","res","setToken","catch","console","log","get","data","alert","Platform","OS","ImagePicker","requestCameraPermissionsAsync","status","length","register","user","post","show","topOffset","type","text1","text2","setTimeout","navigation","navigate","styles","example","pic","width","undefined","color","e","map","c","id","text","container","textareaContainer","textarea","buttonGroup","options","StyleSheet","create","flex","padding","justifyContent","alignItems","height","backgroundColor","textAlignVertical","fontSize","borderRadius","margin","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { View, Text, StyleSheet, Button,ProgressBarAndroid } from \"react-native\";\nimport { Progress } from 'native-base';\nimport FormContainer from \"../../Shared/Form/FormContainer\";\nimport Input from \"../../Shared/Form/Input\";\nimport Error from \"../../Shared/Error\";\nimport Toast from \"react-native-toast-message\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from \"axios\";\nimport baseURL from \"../../assets/common/baseUrl\";\nimport Textarea from 'react-native-textarea';\n\nimport { Item, Picker} from 'native-base'\nimport Icon from 'react-native-vector-icons/FontAwesome'\n\nconst countries = require(\"../../assets/countries.json\");\n\nconst city = require(\"../../assets/city.json\");\nimport { isValidEmail, isValidObjField, updateError } from '../../assets/methods';\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .trim()\n    .min(3, 'Invalid name!')\n    .required('Name is required!'),\n  email: Yup.string().email('Invalid email!').required('Email is required!'),\n  password: Yup.string()\n    .trim()\n    .min(8, 'Password is too short!')\n    .required('Password is required!'),\n  confirmPassword: Yup.string().equals(\n    [Yup.ref('password'), null],\n    'Password does not match!'\n  ),\n});\n\n\nconst AddOption = (props) => {\n  // state = {\n  // userValues:[],\n  // selectedValue:''\n  // }\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [category, setCategory] = useState();\n  const [categories, setCategories] = useState([]);\n\n  const [error, setError] = useState(\"\");\n\n\n\n\n  useEffect(() => {\n\n\n    AsyncStorage.getItem(\"jwt\")\n        .then((res) => {\n            setToken(res)\n        })\n        .catch((error) => console.log(error))\n\n    // Categories\n    axios\n        .get(`${baseURL}options/AllOptions`)\n        .then((res) => setCategories(res.data))\n        .catch((error) => alert(\"Error to load categories\"));\n        // console.log(categories);\n\n\n      (async () => {\n        if (Platform.OS !== \"web\") {\n            const {\n                status,\n            } = await ImagePicker.requestCameraPermissionsAsync();\n            if (status !== \"granted\") {\n                alert(\"Sorry, we need camera roll permissions to make this work!\")\n            }\n        }\n    })();\n\n    return () => {\n        setCategories([]);\n        \n         console.log(categories.length);\n\n    }\n}, [])\n\n\n\n  const register = () => {\n    if (description === \"\" || price === \"\" ) {\n      setError(\"Please fill in the form correctly\");\n    }\n\n    let user = {\n      description: description,\n      price: price,\n    \n\n    };\n    axios\n      .post(`${baseURL}options/InsertOPtions`, user)\n      .then((res) => {\n        if (res.status == 200) {\n          Toast.show({\n            topOffset: 60,\n            type: \"success\",\n            text1: \"Registration Succeeded\",\n            text2: \"Please Login into your account\",\n          });\n          setTimeout(() => {\n            props.navigation.navigate(\"AddOption\");\n          }, 500);\n        }\n      })\n      .catch((error) => {\n        Toast.show({\n          topOffset: 60,\n          type: \"error\",\n          text1: \"Something went wrong\",\n          text2: \"Please try again\",\n        });\n      });\n  };\n  \n\n  return (\n    <KeyboardAwareScrollView\n      viewIsInsideTabBar={true}\n      extraHeight={200}\n      enableOnAndroid={true}\n    >\n      <FormContainer title={\"ADD Options\"}>\n\n      <View style={styles.example}>\n        <Text>  1/2</Text>\n        <ProgressBarAndroid   size=\"sm\"  mb={4}\n          styleAttr=\"Horizontal\"\n          indeterminate={false}\n          progress={0.5}\n        />\n\n        \n      </View>\n\n      <View style={styles.pic}>\n\n<Item picker>\n   <Picker\n       mode=\"dropdown\"\n       iosIcon={<Icon color={\"#007aff\"} name=\"arrow-down\" />}\n       style={{ width: undefined }}\n       placeholder=\"Select your Category\"\n       selectedValue={category}\n       placeholderStyle={{ color: \"#007aff\"}}\n       placeholderIconColor=\"#007aff\"\n       // onValueChange={(e) => [setPickerValue(e), setCategory(e)]}\n       onValueChange={(e) => setCategory(e)}\n\n   >\n       {categories.map((c) => {\nreturn <Picker.Item key={c.id} label={c.name} value={c.name} />;\n})}\n   </Picker>\n</Item> \n</View>\n\n      \n\n    \n        <Input\n          placeholder={\"price\"}\n          name={\"price\"}\n          id={\"price\"}\n          keyboardType={\"numeric\"}\n          onChangeText={(text) => setPrice(text)}\n        />\n<View style={styles.container}>\n  <Textarea\n    containerStyle={styles.textareaContainer}\n    style={styles.textarea}\n    name={\"description\"}\n    id={\"description\"}\n    onChangeText={(text) => setDescription(text)}\n    maxLength={120}\n    placeholder={'Enter the Description of options'}\n    placeholderTextColor={'#c7c7c7'}\n    underlineColorAndroid={'transparent'}\n  />\n</View>\n\n\n\n    \n\n\n\n\n        <View style={styles.buttonGroup}>\n          {error ? <Error message={error} /> : null}\n        </View>\n         \n     <View style={styles.options}>\n         \n    \n\n          <EasyButton\n            large\n            secondary\n            onPress={() => props.navigation.navigate(\"serviceForm\")}\n          >\n            <Text style={{ color: \"white\" }}>Vos services</Text>\n          </EasyButton>\n\n\n\n          <EasyButton large primary onPress={() => register()}>\n            <Text style={{ color: \"white\" }}>Register</Text>\n          </EasyButton>\n        </View>\n      </FormContainer>\n    </KeyboardAwareScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      padding: 30,\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    textareaContainer: {\n      height: 180,\n      padding: 5,\n      backgroundColor: '#F5FCFF',\n    },\n    textarea: {\n      textAlignVertical: 'top',  // hack android\n      height: 170,\n      fontSize: 14,\n      color: '#333',\n    },\n\n          \n    pic:{\n\n        width: '80%',\n        height: 50,\n              borderRadius: 20,\n              backgroundColor: 'white',\n              margin: 10,\n              borderRadius: 20,\n              padding: 10,\n              borderWidth: 2,\n              borderColor: 'orange',\n              justifyContent: 'center'},\n  });\n\nexport default AddOption;"]},"metadata":{},"sourceType":"module"}
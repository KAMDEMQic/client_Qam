{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TouchableHighLight } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width;\n\nvar ListItem = function ListItem(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  return _jsxs(View, {\n    children: [_jsx(Modal, {\n      animationType: \"fade\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        setModalVisible(false);\n      },\n      children: _jsx(View, {\n        style: styles.centeredView,\n        children: _jsxs(View, {\n          style: styles.modalView,\n          children: [_jsx(TouchableOpacity, {\n            underlayColor: \"#E8E8E8\",\n            onPress: function onPress() {\n              setModalVisible(false);\n            },\n            style: {\n              alignSelf: \"flex-end\",\n              position: \"absolute\",\n              top: 5,\n              right: 10\n            },\n            children: _jsx(Icon, {\n              name: \"close\",\n              size: 20\n            })\n          }), _jsx(EasyButton, {\n            medium: true,\n            secondary: true,\n            onPress: function onPress() {\n              return [props.navigation.navigate(\"ProductForm\", {\n                item: props\n              }), setModalVisible(false)];\n            },\n            children: _jsx(Text, {\n              style: styles.textStyle,\n              children: \"Edit\"\n            })\n          }), _jsx(EasyButton, {\n            medium: true,\n            danger: true,\n            onPress: function onPress() {\n              return [props.delete(props._id), setModalVisible(false)];\n            },\n            children: _jsx(Text, {\n              style: styles.textStyle,\n              children: \"Delete\"\n            })\n          })]\n        })\n      })\n    }), _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        props.navigation.navigate(\"Product Detail\", {\n          item: props\n        });\n      },\n      onLongPress: function onLongPress() {\n        return setModalVisible(true);\n      },\n      style: [styles.container, {\n        backgroundColor: props.index % 2 == 0 ? \"white\" : \"gainsboro\"\n      }],\n      children: [_jsx(Image, {\n        source: {\n          uri: props.image ? props.image : 'https://cdn.pixabay.com/photo/2012/04/01/17/29/box-23649_960_720.png'\n        },\n        resizeMode: \"contain\",\n        style: styles.image\n      }), _jsx(Text, {\n        style: styles.item,\n        children: props.brand\n      }), _jsx(Text, {\n        style: styles.item,\n        numberOfLines: 1,\n        ellipsizeMode: \"tail\",\n        children: props.name\n      }), _jsx(Text, {\n        style: styles.item,\n        numberOfLines: 1,\n        ellipsizeMode: \"tail\",\n        children: props.category.name\n      }), _jsxs(Text, {\n        style: styles.item,\n        children: [\"FCFA \", props.price]\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    padding: 5,\n    width: width\n  },\n  image: {\n    borderRadius: 50,\n    width: width / 6,\n    height: 20,\n    margin: 2\n  },\n  item: {\n    flexWrap: \"wrap\",\n    margin: 3,\n    width: width / 6\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  }\n});\nexport default ListItem;","map":{"version":3,"sources":["/home/theo/Bureau/react/QAM_U/qam/Screens/Admin/ListItem.js"],"names":["React","useState","TouchableHighLight","Icon","EasyButton","Dimensions","get","width","ListItem","props","modalVisible","setModalVisible","styles","centeredView","modalView","alignSelf","position","top","right","navigation","navigate","item","textStyle","delete","_id","container","backgroundColor","index","uri","image","brand","name","category","price","StyleSheet","create","flexDirection","padding","borderRadius","height","margin","flexWrap","flex","justifyContent","alignItems","marginTop","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n    View,\n    StyleSheet,\n    Text,\n    Image,\n    TouchableHighLight,\n    TouchableOpacity,\n    Dimensions,\n    Button,\n    Modal\n} from \"react-native\";\nimport Icon from \"react-native-vector-icons/FontAwesome\"\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\";\n\nvar { width } = Dimensions.get(\"window\");\n\nconst ListItem = (props) => {\n\n    const [modalVisible, setModalVisible] = useState(false)\n\n    return(\n        <View>\n            <Modal\n                animationType=\"fade\"\n                transparent={true}\n                visible={modalVisible}\n                onRequestClose={() => {\n                    setModalVisible(false)\n                }}\n            >\n                <View style={styles.centeredView}>\n                    <View style={styles.modalView}>\n                        <TouchableOpacity\n                            underlayColor=\"#E8E8E8\"\n                            onPress={() => {\n                                setModalVisible(false)\n                            }}\n                            style={{ \n                                alignSelf: \"flex-end\",\n                                position: \"absolute\",\n                                top: 5,\n                                right: 10\n                            }}\n                        >\n                            <Icon name=\"close\" size={20} />\n                        </TouchableOpacity>\n                        <EasyButton \n                        medium \n                        secondary\n                        onPress={() => [\n                            props.navigation.navigate(\"ProductForm\", { item: props}),\n                            setModalVisible(false)\n                        ]}\n                        >\n                            <Text style={styles.textStyle}>Edit</Text>\n                        </EasyButton>\n                        <EasyButton \n                        medium \n                        danger\n                        onPress={() => [props.delete(props._id), setModalVisible(false)]}\n                        >\n                            <Text style={styles.textStyle}>Delete</Text>\n                        </EasyButton>\n                    </View>\n                </View>\n\n            </Modal>\n            <TouchableOpacity\n                onPress={() => {\n                    props.navigation.navigate(\"Product Detail\", { item: props })\n                }}\n                onLongPress={() => setModalVisible(true)}\n                style={[styles.container, {\n                    backgroundColor: props.index % 2 == 0 ? \"white\" : \"gainsboro\"\n                }]}\n            >\n                <Image \n                    source={{\n                        uri: props.image\n                        ? props.image\n                        : 'https://cdn.pixabay.com/photo/2012/04/01/17/29/box-23649_960_720.png'\n                    }}\n                    resizeMode=\"contain\"\n                    style={styles.image}\n                />\n                <Text style={styles.item}>{props.brand}</Text>\n                <Text style={styles.item} numberOfLines={1} ellipsizeMode=\"tail\">{props.name}</Text>\n                <Text style={styles.item} numberOfLines={1} ellipsizeMode=\"tail\">{props.category.name}</Text>\n                <Text style={styles.item}>FCFA {props.price}</Text>\n            </TouchableOpacity>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: 'row',\n        padding: 5,\n        width: width\n    },\n    image: {\n        borderRadius: 50,\n        width: width / 6,\n        height: 20,\n        margin: 2\n    },\n    item: {\n        flexWrap: \"wrap\",\n        margin: 3,\n        width: width / 6\n    },\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 22\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 5\n    },\n    textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\"\n    }\n})\n\nexport default ListItem;"]},"metadata":{},"sourceType":"module"}
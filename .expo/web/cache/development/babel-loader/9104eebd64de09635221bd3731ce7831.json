{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Container, Header, Content, ListItem, Text, Radio, Right, Left, Picker, Icon, Body, Title } from 'native-base';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar methods = [{\n  name: 'Cash on Delivery',\n  value: 1\n}, {\n  name: 'Bank Transfer',\n  value: 2\n}, {\n  name: 'Card Payment',\n  value: 3\n}];\nvar paymentCards = [{\n  name: 'Wallet',\n  value: 1\n}, {\n  name: 'Visa',\n  value: 2\n}, {\n  name: 'MasterCard',\n  value: 3\n}, {\n  name: 'Other',\n  value: 4\n}];\n\nvar Payment = function Payment(props) {\n  var order = props.route.params;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      card = _useState4[0],\n      setCard = _useState4[1];\n\n  return _jsxs(Container, {\n    children: [_jsx(Header, {\n      children: _jsx(Body, {\n        children: _jsx(Title, {\n          children: \"Choose your payment method\"\n        })\n      })\n    }), _jsxs(Content, {\n      children: [methods.map(function (item, index) {\n        return _jsxs(ListItem, {\n          onPress: function onPress() {\n            return setSelected(item.value);\n          },\n          children: [_jsx(Left, {\n            children: _jsx(Text, {\n              children: item.name\n            })\n          }), _jsx(Right, {\n            children: _jsx(Radio, {\n              selected: selected == item.value\n            })\n          })]\n        }, item.name);\n      }), selected == 3 ? _jsx(Picker, {\n        mode: \"dropdown\",\n        iosIcon: _jsx(Icon, {\n          name: \"arrow-down\"\n        }),\n        headerStyle: {\n          backgroundColor: 'orange'\n        },\n        headerBackButtonTextStyle: {\n          color: '#fff'\n        },\n        headerTitleStyle: {\n          color: '#fff'\n        },\n        selectedValue: card,\n        onValueChange: function onValueChange(x) {\n          return setCard(x);\n        },\n        children: paymentCards.map(function (c, index) {\n          return _jsx(Picker.Item, {\n            label: c.name,\n            value: c.name\n          }, c.name);\n        })\n      }) : null, _jsx(View, {\n        style: {\n          marginTop: 60,\n          alignSelf: 'center'\n        },\n        children: _jsx(Button, {\n          title: \"Confirm\",\n          onPress: function onPress() {\n            return props.navigation.navigate(\"Confirm\", {\n              order: order\n            });\n          }\n        })\n      })]\n    })]\n  });\n};\n\nexport default Payment;","map":{"version":3,"sources":["/home/theo/Bureau/react/QAM_U/easy-shop/Screens/Cart/Checkout/Payment.js"],"names":["React","useState","Container","Header","Content","ListItem","Text","Radio","Right","Left","Picker","Icon","Body","Title","methods","name","value","paymentCards","Payment","props","order","route","params","selected","setSelected","card","setCard","map","item","index","backgroundColor","color","x","c","marginTop","alignSelf","navigation","navigate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SACIC,SADJ,EAEIC,MAFJ,EAGIC,OAHJ,EAIIC,QAJJ,EAKIC,IALJ,EAMIC,KANJ,EAOIC,KAPJ,EAQIC,IARJ,EASIC,MATJ,EAUIC,IAVJ,EAWIC,IAXJ,EAYIC,KAZJ,QAaO,aAbP;;;AAeA,IAAMC,OAAO,GAAG,CACZ;AAAEC,EAAAA,IAAI,EAAE,kBAAR;AAA4BC,EAAAA,KAAK,EAAE;AAAnC,CADY,EAEZ;AAAED,EAAAA,IAAI,EAAE,eAAR;AAAyBC,EAAAA,KAAK,EAAE;AAAhC,CAFY,EAGZ;AAAED,EAAAA,IAAI,EAAE,cAAR;AAAwBC,EAAAA,KAAK,EAAE;AAA/B,CAHY,CAAhB;AAMA,IAAMC,YAAY,GAAG,CACjB;AAAEF,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CADiB,EAEjB;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAFiB,EAGjB;AAAED,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CAHiB,EAIjB;AAAED,EAAAA,IAAI,EAAE,OAAR;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CAJiB,CAArB;;AAOA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAEvB,MAAMC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAA1B;;AAEA,kBAAgCrB,QAAQ,EAAxC;AAAA;AAAA,MAAOsB,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAwBvB,QAAQ,EAAhC;AAAA;AAAA,MAAOwB,IAAP;AAAA,MAAaC,OAAb;;AACA,SACG,MAAC,SAAD;AAAA,eACI,KAAC,MAAD;AAAA,gBACI,KAAC,IAAD;AAAA,kBACI,KAAC,KAAD;AAAA;AAAA;AADJ;AADJ,MADJ,EAMI,MAAC,OAAD;AAAA,iBACKZ,OAAO,CAACa,GAAR,CAAY,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC1B,eACI,MAAC,QAAD;AAA0B,UAAA,OAAO,EAAE;AAAA,mBAAML,WAAW,CAACI,IAAI,CAACZ,KAAN,CAAjB;AAAA,WAAnC;AAAA,qBACI,KAAC,IAAD;AAAA,sBACC,KAAC,IAAD;AAAA,wBAAOY,IAAI,CAACb;AAAZ;AADD,YADJ,EAII,KAAC,KAAD;AAAA,sBACI,KAAC,KAAD;AAAO,cAAA,QAAQ,EAAEQ,QAAQ,IAAIK,IAAI,CAACZ;AAAlC;AADJ,YAJJ;AAAA,WAAeY,IAAI,CAACb,IAApB,CADJ;AAUH,OAXA,CADL,EAaKQ,QAAQ,IAAI,CAAZ,GACG,KAAC,MAAD;AACC,QAAA,IAAI,EAAC,UADN;AAEC,QAAA,OAAO,EAAE,KAAC,IAAD;AAAM,UAAA,IAAI,EAAE;AAAZ,UAFV;AAGC,QAAA,WAAW,EAAE;AAAEO,UAAAA,eAAe,EAAE;AAAnB,SAHd;AAIC,QAAA,yBAAyB,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAJ5B;AAKC,QAAA,gBAAgB,EAAE;AAAEA,UAAAA,KAAK,EAAE;AAAT,SALnB;AAMC,QAAA,aAAa,EAAEN,IANhB;AAOC,QAAA,aAAa,EAAE,uBAACO,CAAD;AAAA,iBAAON,OAAO,CAACM,CAAD,CAAd;AAAA,SAPhB;AAAA,kBASKf,YAAY,CAACU,GAAb,CAAiB,UAACM,CAAD,EAAIJ,KAAJ,EAAc;AAC5B,iBAAO,KAAC,MAAD,CAAQ,IAAR;AAEP,YAAA,KAAK,EAAEI,CAAC,CAAClB,IAFF;AAGP,YAAA,KAAK,EAAEkB,CAAC,CAAClB;AAHF,aACFkB,CAAC,CAAClB,IADA,CAAP;AAIH,SALA;AATL,QADH,GAiBG,IA9BR,EA+BI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEmB,UAAAA,SAAS,EAAE,EAAb;AAAiBC,UAAAA,SAAS,EAAE;AAA5B,SAAb;AAAA,kBACQ,KAAC,MAAD;AACA,UAAA,KAAK,EAAE,SADP;AAEA,UAAA,OAAO,EAAE;AAAA,mBAAMhB,KAAK,CAACiB,UAAN,CAAiBC,QAAjB,CAA0B,SAA1B,EAAqC;AAAEjB,cAAAA,KAAK,EAALA;AAAF,aAArC,CAAN;AAAA;AAFT;AADR,QA/BJ;AAAA,MANJ;AAAA,IADH;AA8CH,CApDD;;AAsDA,eAAeF,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport { View, Button } from 'react-native'\nimport {\n    Container,\n    Header,\n    Content,\n    ListItem,\n    Text,\n    Radio,\n    Right,\n    Left,\n    Picker,\n    Icon,\n    Body,\n    Title\n} from 'native-base';\n\nconst methods = [\n    { name: 'Cash on Delivery', value: 1 },\n    { name: 'Bank Transfer', value: 2 },\n    { name: 'Card Payment', value: 3}\n]\n\nconst paymentCards = [\n    { name: 'Wallet', value: 1 },\n    { name: 'Visa', value: 2 },\n    { name: 'MasterCard', value: 3},\n    { name: 'Other', value: 4}\n]\n\nconst Payment = (props) => {\n\n    const order = props.route.params;\n\n    const [selected, setSelected] = useState();\n    const [card, setCard] = useState();\n    return(\n       <Container>\n           <Header>\n               <Body>\n                   <Title>Choose your payment method</Title>\n               </Body>\n           </Header>\n           <Content>\n               {methods.map((item, index) => {\n                   return (\n                       <ListItem key={item.name} onPress={() => setSelected(item.value)}>\n                           <Left>\n                            <Text>{item.name}</Text>\n                           </Left>\n                           <Right>\n                               <Radio selected={selected == item.value}/>\n                           </Right>\n                       </ListItem>\n                   )\n               })}\n               {selected == 3 ? (\n                   <Picker\n                    mode=\"dropdown\"\n                    iosIcon={<Icon name={\"arrow-down\"} />}\n                    headerStyle={{ backgroundColor: 'orange' }}\n                    headerBackButtonTextStyle={{ color: '#fff' }}\n                    headerTitleStyle={{ color: '#fff' }}\n                    selectedValue={card}\n                    onValueChange={(x) => setCard(x)}\n                   >\n                       {paymentCards.map((c, index) => {\n                           return <Picker.Item \n                           key={c.name} \n                           label={c.name} \n                           value={c.name} />\n                       })}\n                   </Picker>\n               ) : null }\n               <View style={{ marginTop: 60, alignSelf: 'center' }}>\n                       <Button \n                       title={\"Confirm\"} \n                       onPress={() => props.navigation.navigate(\"Confirm\", { order })}/>\n               </View>\n           </Content>\n       </Container>\n    )\n}\n\nexport default Payment;"]},"metadata":{},"sourceType":"module"}
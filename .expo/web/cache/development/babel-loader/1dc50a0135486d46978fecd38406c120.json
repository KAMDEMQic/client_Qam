{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FormContainer from \"../../Shared/Form/FormContainer\";\nimport Input from \"../../Shared/Form/Input\";\nimport Error from \"../../Shared/Error\";\nimport Toast from \"react-native-toast-message\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\";\nimport axios from \"axios\";\nimport baseURL from \"../../assets/common/baseUrl\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Otp = function Otp(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      otp = _useState2[0],\n      setOtp = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      phoneNumber = _useState4[0],\n      setphoneNumber = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var register = function register(phoneNumber) {\n    if (otp === \"\") {\n      setError(\"Please fill in the form correctly\");\n    }\n\n    axios.post(baseURL + \"VerifyNumber/mobile\", {\n      otp: otp\n    }, {\n      phoneNumber: phoneNumber\n    }).then(function (res) {\n      if (res.data.resp.valid) {\n        Toast.show({\n          topOffset: 60,\n          type: \"success\",\n          text1: \"Registration Succeeded\",\n          text2: \"Please Login into your account\"\n        });\n        setTimeout(function () {\n          props.navigation.navigate(\"serviceForm\");\n        }, 500);\n      }\n    }).catch(function (error) {\n      Toast.show({\n        topOffset: 60,\n        type: \"error\",\n        text1: \"Something went wrong\",\n        text2: \"Please try again\"\n      });\n    });\n  };\n\n  return _jsx(KeyboardAwareScrollView, {\n    viewIsInsideTabBar: true,\n    extraHeight: 200,\n    enableOnAndroid: true,\n    children: _jsxs(FormContainer, {\n      title: \"Enter the code\",\n      children: [_jsx(View, {\n        children: _jsx(Input, {\n          placeholder: \"enter the code you received\",\n          name: \"otp\",\n          id: \"otp\",\n          keyboardType: \"numeric\",\n          onChangeText: function onChangeText(text) {\n            return setOtp(text);\n          }\n        })\n      }), _jsx(View, {\n        style: styles.buttonGroup,\n        children: error ? _jsx(Error, {\n          message: error\n        }) : null\n      }), _jsx(View, {\n        children: _jsx(EasyButton, {\n          large: true,\n          primary: true,\n          onPress: function onPress() {\n            return register();\n          },\n          children: _jsx(Text, {\n            style: {\n              color: \"white\"\n            },\n            children: \"Verify\"\n          })\n        })\n      }), _jsx(View, {\n        children: _jsx(EasyButton, {\n          large: true,\n          secondary: true,\n          onPress: function onPress() {\n            return props.navigation.navigate(\"Login\");\n          },\n          children: _jsx(Text, {\n            style: {\n              color: \"white\"\n            },\n            children: \"Back to Login\"\n          })\n        })\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  buttonGroup: {\n    width: \"80%\",\n    margin: 10,\n    alignItems: \"center\"\n  },\n  message: {\n    fontSize: 16,\n    paddingHorizontal: 30\n  }\n});\nexport default Otp;","map":{"version":3,"sources":["/home/theo/Bureau/react/QAM_U/client_Qam/Screens/User/Otp.js"],"names":["React","useState","FormContainer","Input","Error","Toast","KeyboardAwareScrollView","EasyButton","axios","baseURL","Otp","props","otp","setOtp","phoneNumber","setphoneNumber","error","setError","register","post","then","res","data","resp","valid","show","topOffset","type","text1","text2","setTimeout","navigation","navigate","catch","text","styles","buttonGroup","color","StyleSheet","create","width","margin","alignItems","message","fontSize","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { View, Text, StyleSheet, Button } from \"react-native\";\nimport FormContainer from \"../../Shared/Form/FormContainer\";\nimport Input from \"../../Shared/Form/Input\";\nimport Error from \"../../Shared/Error\";\nimport Toast from \"react-native-toast-message\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\";\n// import { useHistory } from \"react-router-dom\";\n\n\n\nimport axios from \"axios\";\nimport baseURL from \"../../assets/common/baseUrl\";\n\nconst Otp = (props) => {\n  // const classes = useStyles();\n  const [otp, setOtp] = useState(\"\");\n  // const history = useHistory();;\n  const [phoneNumber, setphoneNumber] = useState(\"\");\n  //  const { phoneNumber } = useState(\"\");\n  \n\n\n  const [error, setError] = useState(\"\");\n\n  const register = (phoneNumber) => {\n    if (otp === \"\") {\n      setError(\"Please fill in the form correctly\");\n    }\n\n    // let user = {\n    //   email: email\n   \n    // };\n    \n    \n\n    axios.post(`${baseURL}VerifyNumber/mobile`,{ otp } , { phoneNumber }).then((res) => {\n\n        if (res.data.resp.valid) {\n          Toast.show({\n            topOffset: 60,\n            type: \"success\",\n            text1: \"Registration Succeeded\",\n            text2: \"Please Login into your account\",\n          });\n          setTimeout(() => {\n            props.navigation.navigate(\"serviceForm\");\n          }, 500);\n        }\n      })\n      .catch((error) => {\n        Toast.show({\n          topOffset: 60,\n          type: \"error\",\n          text1: \"Something went wrong\",\n          text2: \"Please try again\",\n        });\n      });\n\n  \n  };\n\n  // const handleChange = (event) => {\n  //   setOtp(event.target.value);\n  // };\n\n  return (\n    <KeyboardAwareScrollView\n      viewIsInsideTabBar={true}\n      extraHeight={200}\n      enableOnAndroid={true}\n    >\n      <FormContainer title={\"Enter the code\"}>\n{/* \n      <Text style={styles.message}>\n       {`Your phone (${phoneNumber}) will be used to protect your account each time you log in.`}\n     </Text> */}\n     <View>\n        <Input\n          placeholder={\"enter the code you received\"}\n          name={\"otp\"}\n          id={\"otp\"}\n          keyboardType={\"numeric\"}\n          onChangeText={(text) => setOtp(text)}\n        />\n      \n      </View>\n       \n        <View style={styles.buttonGroup}>\n          {error ? <Error message={error} /> : null}\n        </View>\n        <View>\n          <EasyButton large primary onPress={() => register()}>\n            <Text style={{ color: \"white\" }}>Verify</Text>\n          </EasyButton>\n        </View>\n        <View>\n          <EasyButton\n            large\n            secondary\n            onPress={() => props.navigation.navigate(\"Login\")}\n          >\n            <Text style={{ color: \"white\" }}>Back to Login</Text>\n          </EasyButton>\n        </View>\n      </FormContainer>\n    </KeyboardAwareScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  buttonGroup: {\n    width: \"80%\",\n    margin: 10,\n    alignItems: \"center\",\n  },\n  message: {\n    fontSize: 16,\n    paddingHorizontal: 30,\n  },\n});\n\nexport default Otp;\n"]},"metadata":{},"sourceType":"module"}
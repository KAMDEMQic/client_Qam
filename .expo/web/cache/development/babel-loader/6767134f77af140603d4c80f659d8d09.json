{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FormContainer from \"../../Shared/Form/FormContainer\";\nimport Input from \"../../Shared/Form/Input\";\nimport Error from \"../../Shared/Error\";\nimport Toast from \"react-native-toast-message\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\";\nimport axios from \"axios\";\nimport baseURL from \"../../assets/common/baseUrl\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar forgetPassword = function forgetPassword(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var register = function register() {\n    if (email === \"\") {\n      setError(\"Please fill in the form correctly\");\n    }\n\n    var user = {\n      email: email\n    };\n    axios.post(baseURL + \"users/forgetP\", user).then(function (res) {\n      if (res.status == 200) {\n        Toast.show({\n          topOffset: 60,\n          type: \"success\",\n          text1: \"Registration Succeeded\",\n          text2: \"Please Login into your account\"\n        });\n      }\n    }).catch(function (error) {\n      Toast.show({\n        topOffset: 60,\n        type: \"error\",\n        text1: \"Something went wrong\",\n        text2: \"Please try again\"\n      });\n    });\n  };\n\n  return _jsx(KeyboardAwareScrollView, {\n    viewIsInsideTabBar: true,\n    extraHeight: 200,\n    enableOnAndroid: true,\n    children: _jsxs(FormContainer, {\n      title: \"Register\",\n      children: [_jsx(Input, {\n        placeholder: \"Email\",\n        name: \"email\",\n        id: \"email\",\n        onChangeText: function onChangeText(text) {\n          return setEmail(text.toLowerCase());\n        }\n      }), _jsx(View, {\n        style: styles.buttonGroup,\n        children: error ? _jsx(Error, {\n          message: error\n        }) : null\n      }), _jsx(View, {\n        children: _jsx(EasyButton, {\n          large: true,\n          primary: true,\n          onPress: function onPress() {\n            return register();\n          },\n          children: _jsx(Text, {\n            style: {\n              color: \"white\"\n            },\n            children: \"Send Link\"\n          })\n        })\n      }), _jsx(View, {\n        children: _jsx(EasyButton, {\n          large: true,\n          secondary: true,\n          onPress: function onPress() {\n            return props.navigation.navigate(\"Login\");\n          },\n          children: _jsx(Text, {\n            style: {\n              color: \"white\"\n            },\n            children: \"Back to Login\"\n          })\n        })\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  buttonGroup: {\n    width: \"80%\",\n    margin: 10,\n    alignItems: \"center\"\n  }\n});\nexport default forgetPassword;","map":{"version":3,"sources":["/home/theo/Bureau/react/QAM_U/client_Qam/Screens/User/forgetPassword.js"],"names":["React","useState","FormContainer","Input","Error","Toast","KeyboardAwareScrollView","EasyButton","axios","baseURL","forgetPassword","props","email","setEmail","error","setError","register","user","post","then","res","status","show","topOffset","type","text1","text2","catch","text","toLowerCase","styles","buttonGroup","color","navigation","navigate","StyleSheet","create","width","margin","alignItems"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,OAAOC,aAAP;AACA,OAAOC,KAAP;AACA,OAAOC,KAAP;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,SAASC,uBAAT,QAAwC,yCAAxC;AACA,OAAOC,UAAP;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP;;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAChC,kBAA0BV,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOW,KAAP;AAAA,MAAcC,QAAd;;AAEA,mBAA0BZ,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOa,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAIJ,KAAK,KAAK,EAAd,EAAkB;AAChBG,MAAAA,QAAQ,CAAC,mCAAD,CAAR;AACD;;AAED,QAAIE,IAAI,GAAG;AACTL,MAAAA,KAAK,EAAEA;AADE,KAAX;AAIAJ,IAAAA,KAAK,CACFU,IADH,CACWT,OADX,oBACmCQ,IADnC,EAEGE,IAFH,CAEQ,UAACC,GAAD,EAAS;AACb,UAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrBhB,QAAAA,KAAK,CAACiB,IAAN,CAAW;AACTC,UAAAA,SAAS,EAAE,EADF;AAETC,UAAAA,IAAI,EAAE,SAFG;AAGTC,UAAAA,KAAK,EAAE,wBAHE;AAITC,UAAAA,KAAK,EAAE;AAJE,SAAX;AASD;AACF,KAdH,EAeGC,KAfH,CAeS,UAACb,KAAD,EAAW;AAChBT,MAAAA,KAAK,CAACiB,IAAN,CAAW;AACTC,QAAAA,SAAS,EAAE,EADF;AAETC,QAAAA,IAAI,EAAE,OAFG;AAGTC,QAAAA,KAAK,EAAE,sBAHE;AAITC,QAAAA,KAAK,EAAE;AAJE,OAAX;AAMD,KAtBH;AAuBD,GAhCD;;AAkCA,SACE,KAAC,uBAAD;AACE,IAAA,kBAAkB,EAAE,IADtB;AAEE,IAAA,WAAW,EAAE,GAFf;AAGE,IAAA,eAAe,EAAE,IAHnB;AAAA,cAKE,MAAC,aAAD;AAAe,MAAA,KAAK,EAAE,UAAtB;AAAA,iBACE,KAAC,KAAD;AACE,QAAA,WAAW,EAAE,OADf;AAEE,QAAA,IAAI,EAAE,OAFR;AAGE,QAAA,EAAE,EAAE,OAHN;AAIE,QAAA,YAAY,EAAE,sBAACE,IAAD;AAAA,iBAAUf,QAAQ,CAACe,IAAI,CAACC,WAAL,EAAD,CAAlB;AAAA;AAJhB,QADF,EAUE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,WAApB;AAAA,kBACGjB,KAAK,GAAG,KAAC,KAAD;AAAO,UAAA,OAAO,EAAEA;AAAhB,UAAH,GAA+B;AADvC,QAVF,EAaE,KAAC,IAAD;AAAA,kBACE,KAAC,UAAD;AAAY,UAAA,KAAK,MAAjB;AAAkB,UAAA,OAAO,MAAzB;AAA0B,UAAA,OAAO,EAAE;AAAA,mBAAME,QAAQ,EAAd;AAAA,WAAnC;AAAA,oBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEgB,cAAAA,KAAK,EAAE;AAAT,aAAb;AAAA;AAAA;AADF;AADF,QAbF,EAkBE,KAAC,IAAD;AAAA,kBACE,KAAC,UAAD;AACE,UAAA,KAAK,MADP;AAEE,UAAA,SAAS,MAFX;AAGE,UAAA,OAAO,EAAE;AAAA,mBAAMrB,KAAK,CAACsB,UAAN,CAAiBC,QAAjB,CAA0B,OAA1B,CAAN;AAAA,WAHX;AAAA,oBAKE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEF,cAAAA,KAAK,EAAE;AAAT,aAAb;AAAA;AAAA;AALF;AADF,QAlBF;AAAA;AALF,IADF;AAoCD,CA3ED;;AA6EA,IAAMF,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,WAAW,EAAE;AACXM,IAAAA,KAAK,EAAE,KADI;AAEXC,IAAAA,MAAM,EAAE,EAFG;AAGXC,IAAAA,UAAU,EAAE;AAHD;AADkB,CAAlB,CAAf;AAQA,eAAe7B,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { View, Text, StyleSheet, Button } from \"react-native\";\nimport FormContainer from \"../../Shared/Form/FormContainer\";\nimport Input from \"../../Shared/Form/Input\";\nimport Error from \"../../Shared/Error\";\nimport Toast from \"react-native-toast-message\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\";\n\nimport axios from \"axios\";\nimport baseURL from \"../../assets/common/baseUrl\";\n\nconst forgetPassword = (props) => {\n  const [email, setEmail] = useState(\"\");\n\n  const [error, setError] = useState(\"\");\n\n  const register = () => {\n    if (email === \"\") {\n      setError(\"Please fill in the form correctly\");\n    }\n\n    let user = {\n      email: email\n   \n    };\n    axios\n      .post(`${baseURL}users/forgetP`, user)\n      .then((res) => {\n        if (res.status == 200) {\n          Toast.show({\n            topOffset: 60,\n            type: \"success\",\n            text1: \"Registration Succeeded\",\n            text2: \"Please Login into your account\",\n          });\n          // setTimeout(() => {\n          //   props.navigation.navigate(\"Login\");\n          // }, 500);\n        }\n      })\n      .catch((error) => {\n        Toast.show({\n          topOffset: 60,\n          type: \"error\",\n          text1: \"Something went wrong\",\n          text2: \"Please try again\",\n        });\n      });\n  };\n\n  return (\n    <KeyboardAwareScrollView\n      viewIsInsideTabBar={true}\n      extraHeight={200}\n      enableOnAndroid={true}\n    >\n      <FormContainer title={\"Register\"}>\n        <Input\n          placeholder={\"Email\"}\n          name={\"email\"}\n          id={\"email\"}\n          onChangeText={(text) => setEmail(text.toLowerCase())}\n        />\n      \n       \n       \n        <View style={styles.buttonGroup}>\n          {error ? <Error message={error} /> : null}\n        </View>\n        <View>\n          <EasyButton large primary onPress={() => register()}>\n            <Text style={{ color: \"white\" }}>Send Link</Text>\n          </EasyButton>\n        </View>\n        <View>\n          <EasyButton\n            large\n            secondary\n            onPress={() => props.navigation.navigate(\"Login\")}\n          >\n            <Text style={{ color: \"white\" }}>Back to Login</Text>\n          </EasyButton>\n        </View>\n      </FormContainer>\n    </KeyboardAwareScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  buttonGroup: {\n    width: \"80%\",\n    margin: 10,\n    alignItems: \"center\",\n  },\n});\n\nexport default forgetPassword;\n"]},"metadata":{},"sourceType":"module"}